import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,a as n}from"./app-C5APbeVX.js";const i={},l=n(`<h1 id="引言" tabindex="-1"><a class="header-anchor" href="#引言"><span>引言：</span></a></h1><h2 id="_1-线性代数-linear-algebra" tabindex="-1"><a class="header-anchor" href="#_1-线性代数-linear-algebra"><span>1. 线性代数（linear algebra)</span></a></h2><h3 id="_1-4-行列式" tabindex="-1"><a class="header-anchor" href="#_1-4-行列式"><span>1.4 行列式</span></a></h3><ol><li>方阵的行列式（np.linalg.det()）</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h2 id="_1-5-矩阵" tabindex="-1"><a class="header-anchor" href="#_1-5-矩阵"><span>1.5 矩阵</span></a></h2><ol><li></li></ol><ol start="3"><li>检验矩阵是否相等（np.allclose()）</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>获取矩阵的秩（np.linalg.matrix_rank()）</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ol start="5"><li>逆矩阵（np.linalg.inv()）</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ol start="6"><li>增广矩阵（np.hastck()）</li></ol><h3 id="_1-6-内积与正交" tabindex="-1"><a class="header-anchor" href="#_1-6-内积与正交"><span>1.6 内积与正交</span></a></h3><ol><li>内积运算（np.dot()）</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ol start="2"><li>获取向量的长度（np.linalg.norm()）</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ol start="3"><li>对原浮点数进行四舍五入</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,21),r=[l];function o(s,d){return a(),t("div",null,r)}const h=e(i,[["render",o],["__file","some-function-for-aimaths.html.vue"]]),m=JSON.parse('{"path":"/Notability/Artificial-intelligence/AI-mathematics/some-function-for-aimaths.html","title":"some function in ai maths","lang":"zh-CN","frontmatter":{"title":"some function in ai maths","date":"2024-04-17T01:22:18.000Z","isOriginal":true,"category":["AI Mathematics"],"tag":["python","编程","教程"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"引言： 1. 线性代数（linear algebra) 1.4 行列式 方阵的行列式（np.linalg.det()） 1.5 矩阵 检验矩阵是否相等（np.allclose()） 获取矩阵的秩（np.linalg.matrix_rank()） 逆矩阵（np.linalg.inv()） 增广矩阵（np.hastck()） 1.6 内积与正交 内积运算（...","head":[["meta",{"property":"og:url","content":"https://dailyrecord4ryan.com/Notability/Artificial-intelligence/AI-mathematics/some-function-for-aimaths.html"}],["meta",{"property":"og:site_name","content":"Website of Ryan"}],["meta",{"property":"og:title","content":"some function in ai maths"}],["meta",{"property":"og:description","content":"引言： 1. 线性代数（linear algebra) 1.4 行列式 方阵的行列式（np.linalg.det()） 1.5 矩阵 检验矩阵是否相等（np.allclose()） 获取矩阵的秩（np.linalg.matrix_rank()） 逆矩阵（np.linalg.inv()） 增广矩阵（np.hastck()） 1.6 内积与正交 内积运算（..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-17T09:38:37.000Z"}],["meta",{"property":"article:author","content":"Ryan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-04-17T01:22:18.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-17T09:38:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"some function in ai maths\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-17T01:22:18.000Z\\",\\"dateModified\\":\\"2024-04-17T09:38:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan\\",\\"url\\":\\"https://dailyrecord4ryan.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 线性代数（linear algebra)","slug":"_1-线性代数-linear-algebra","link":"#_1-线性代数-linear-algebra","children":[{"level":3,"title":"1.4 行列式","slug":"_1-4-行列式","link":"#_1-4-行列式","children":[]}]},{"level":2,"title":"1.5 矩阵","slug":"_1-5-矩阵","link":"#_1-5-矩阵","children":[{"level":3,"title":"1.6 内积与正交","slug":"_1-6-内积与正交","link":"#_1-6-内积与正交","children":[]}]}],"git":{"createdTime":1713288329000,"updatedTime":1713346717000,"contributors":[{"name":"Lxj679","email":"2944170474@qq.com","commits":3}]},"readingTime":{"minutes":0.49,"words":146},"filePathRelative":"Notability/Artificial-intelligence/AI-mathematics/some-function-for-aimaths.md","localizedDate":"2024年4月17日","excerpt":"\\n<h2>1. 线性代数（linear algebra)</h2>\\n<h3>1.4 行列式</h3>\\n<ol>\\n<li>方阵的行列式（np.linalg.det()）</li>\\n</ol>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code></code></pre></div><h2>1.5 矩阵</h2>\\n<ol>\\n<li></li>\\n</ol>\\n<ol start=\\"3\\">\\n<li>检验矩阵是否相等（np.allclose()）</li>\\n</ol>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code>\\n</code></pre></div>","autoDesc":true}');export{h as comp,m as data};
