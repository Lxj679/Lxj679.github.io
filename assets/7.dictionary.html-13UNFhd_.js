import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as l,c as u,e as k,w as a,a as e,d as s,b as n}from"./app-CjlhnV1D.js";const r="/assets/5fd0d927b22cd876b7cb996d4074f32-LpaTozVH.png",d="/assets/58b94750070db13f8faf3d50efe309e-D_z70sI9.png",m={},v=e(`<h2 id="_1-如何构建一个电话薄" tabindex="-1"><a class="header-anchor" href="#_1-如何构建一个电话薄"><span>1. 如何构建一个电话薄</span></a></h2><p>我们有以下联系人：</p><table><thead><tr><th>姓名</th><th>手机号</th></tr></thead><tbody><tr><td>李雷</td><td>123456</td></tr><tr><td>韩梅梅</td><td>132456</td></tr><tr><td>大卫</td><td>154389</td></tr><tr><td>Mr.Liu</td><td>131452</td></tr><tr><td>Bornforthis</td><td>180595</td></tr><tr><td>Alexa</td><td>131559</td></tr></tbody></table><p>如何用以往学过的知识构建要给具有用户输入查询功能的电话薄</p><blockquote><p>变量、数字型、列表、元组、字符串</p></blockquote><p>程序运行效果：</p><ul><li>测试一：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>Enter your search name<span class="token punctuation">:</span> 李雷
The 李雷 phone number <span class="token keyword">is</span><span class="token punctuation">:</span> <span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试二：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>Enter your search name<span class="token punctuation">:</span> Bornforthis
The 李雷 phone number <span class="token keyword">is</span><span class="token punctuation">:</span> <span class="token number">180595</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,10),b=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("names "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'李雷'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'韩梅梅'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'大卫'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Mr.Liu'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Bornforthis'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Alexa'"),n("span",{class:"token punctuation"},"]"),s(`
numbers `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"132456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"154389"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"131452"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"180595"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"121559"),n("span",{class:"token punctuation"},"]"),s(`

name `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Enter your search name: '"),n("span",{class:"token punctuation"},")"),s(`
position `),n("span",{class:"token operator"},"="),s(" names"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),s(`
number `),n("span",{class:"token operator"},"="),s(" numbers"),n("span",{class:"token punctuation"},"["),s("position"),n("span",{class:"token punctuation"},"]"),s(`

`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"The '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("name"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," phone number is: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("number"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 方法二"),s(`
names `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'李雷'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'韩梅梅'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'大卫'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Mr.Liu'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Bornforthis'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Alexa'"),n("span",{class:"token punctuation"},"]"),s(`
numbers `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"132456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"154389"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"131452"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"180595"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"121559"),n("span",{class:"token punctuation"},"]"),s(`
dictionary `),n("span",{class:"token operator"},"="),s(" names "),n("span",{class:"token operator"},"+"),s(` numbers

name `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Enter your search name: '"),n("span",{class:"token punctuation"},")"),s(`
position `),n("span",{class:"token operator"},"="),s(" dictionary"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("dictionary"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"/"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`
number `),n("span",{class:"token operator"},"="),s(" dictionary"),n("span",{class:"token punctuation"},"["),s("position"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"The '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("name"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," phone number is: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("number"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token comment"},"# 方法三"),s(`
names `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'李雷'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'韩梅梅'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'大卫'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Mr.Liu'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Bornforthis'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},"'Alexa'"),n("span",{class:"token punctuation"},"]"),s(`
numbers `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"123456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"132456"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"154389"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"131452"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"180595"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"121559"),n("span",{class:"token punctuation"},"]"),s(`
dictionary `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"list"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"zip"),n("span",{class:"token punctuation"},"("),s("names"),n("span",{class:"token punctuation"},","),s(" numbers"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

name `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"input"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Enter your search name: '"),n("span",{class:"token punctuation"},")"),s(`
position `),n("span",{class:"token operator"},"="),s(" names"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("position"),n("span",{class:"token punctuation"},")"),s(`
number `),n("span",{class:"token operator"},"="),s(" dictionary"),n("span",{class:"token punctuation"},"["),s("position"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"The '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("name"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," phone number is: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("number"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=e(`<h2 id="_2-字典结构" tabindex="-1"><a class="header-anchor" href="#_2-字典结构"><span>2. 字典结构</span></a></h2><ul><li>用花括号表示字典</li><li>字典内每一项都有两个元素组成：key and value <ul><li><code>{key: value, key: value}</code></li></ul></li><li>各项用逗号隔开</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dictionary <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token number">1234</span><span class="token punctuation">,</span><span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span><span class="token number">3456</span><span class="token punctuation">,</span><span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span><span class="token number">7891</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dictionary<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-字典结构-key-value" tabindex="-1"><a class="header-anchor" href="#_3-字典结构-key-value"><span>3. 字典结构 key &amp; value</span></a></h2><ul><li>key 和 value 是一一对应，同一个键只能有一个对应的值；</li><li>键的类型选的是不可变的，如元组；</li><li>value 的类型是任意的；</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">:</span> <span class="token number">1234</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">:</span> <span class="token string">&#39;bool&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">:</span> <span class="token number">1234</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">:</span> <span class="token string">&#39;bool&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token string">&#39;int&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-用字典-dict-函数创建字典" tabindex="-1"><a class="header-anchor" href="#_4-用字典-dict-函数创建字典"><span>4. 用字典 dict 函数创建字典</span></a></h3><ul><li>方法一： 根据其他序列创建新建字典</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>message <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
list_to_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_to_dict<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>


message <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
list_to_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>list_to_dict<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>方法二：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>lilei<span class="token operator">=</span><span class="token number">98</span><span class="token punctuation">,</span> hanmeimei<span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">上面两种创建字典的方法，有什么优缺点？</p><p>上面方法一的方法，可以更好的适配字典的各种数据类型情况。why？——因为结构是列表里面放元组，而元组的 0 号为放 key， 1号位放 value 。所以，只要是不可变的数据类型都可以放在 0 号位。</p><p>反之方法二：第一个位置必须是’变量‘，不能是其他数据类型。如：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>d1 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>lilei<span class="token operator">=</span><span class="token number">98</span><span class="token punctuation">,</span> hanmeimei<span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">)</span>
d2 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token string">&#39;lilei&#39;</span><span class="token operator">=</span><span class="token number">98</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token operator">=</span><span class="token number">99</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的第二行代码，看起来就很奇怪了，一共有两个值一个值是 <code>lilei</code> 另一个值 98 两个都是值， 可以用 <code>98 </code>赋值给另一个值吗？————显然是不行的。</p><p>我们的赋值是需要把一个值赋值给一个变量（有空间）。</p><p>所以，第二种方法虽然可以创建字典，但是对于字典 key 的各种情况并不能完全支持。</p><blockquote><p>Output 时第二种的 key 只能得到字符串</p></blockquote></div><h2 id="_5-访问字典数据" tabindex="-1"><a class="header-anchor" href="#_5-访问字典数据"><span>5. 访问字典数据</span></a></h2><h3 id="_5-1-中括号访问" tabindex="-1"><a class="header-anchor" href="#_5-1-中括号访问"><span>5.1 中括号访问</span></a></h3><ul><li>利用中括号加要查询的 key</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;99&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">98</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-访问字典键" tabindex="-1"><a class="header-anchor" href="#_5-2-访问字典键"><span>5.2 访问字典键</span></a></h3><ul><li>如果访问字典时输入不存在的 key 会怎么样：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\code7.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
KeyError<span class="token punctuation">:</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>显然，如果直接访问访问键不存在时，会报错，但是我们在实际情况中有时不希望找不到键就报错，那应该怎么办？</p><ul><li><code>get()</code></li></ul><p>当使用 get 方法时，需要提供一个键（key），方法会返回与该键关联的值。如果该键在字典中不存在，get 方法将返回 None，或者你可以指定一个默认值，如果键不存在，则返回这个默认值。</p><p>这是 get 方法的基本语法：</p><p><code>value = dictionary.get(key, default_value)</code></p><ul><li>key：你想要检索的键。</li><li>default_value：（可选）如果键不存在时返回的值。如果未提供此参数，默认值为 None。</li></ul><p>代码示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 创建一个简单的字典</span>
my_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">}</span>

<span class="token comment"># 使用 get 访问一个存在的键</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 输出: Alice</span>

<span class="token comment"># 使用 get 访问一个不存在的键，并提供默认值。</span>
<span class="token comment"># 如果没有提供第二个参数，则返回 None</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_dict<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;gender&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Not Specified&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 输出: Not Specified</span>

<span class="token comment"># output</span>
Alice
Not Specified
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在第一个 get 调用中，我们访问了键 &#39;name&#39;，它在字典中存在，因此返回了对应的值 &#39;Alice&#39;。在第二个调用中，我们试图访问键 &#39;gender&#39;，它在字典中不存在，因此返回了我们指定的默认值 &#39;Not Specified&#39;。</p><h4 id="_5-2-1-如何区分两者的使用场景呢" tabindex="-1"><a class="header-anchor" href="#_5-2-1-如何区分两者的使用场景呢"><span>5.2.1 如何区分两者的使用场景呢？</span></a></h4><ul><li><p>python 底层逻辑是基于 c/c ++ 语言实现的，直接使用 <code>[]</code> 只有一次转换，比使用 <code>get.()</code> 经过多次转换的执行时间更短</p></li><li><p>在如电话薄查询时，不希望查找失败就报错</p></li></ul><h3 id="_5-3-字典的操作" tabindex="-1"><a class="header-anchor" href="#_5-3-字典的操作"><span>5.3 字典的操作</span></a></h3><h4 id="_5-3-1-修改" tabindex="-1"><a class="header-anchor" href="#_5-3-1-修改"><span>5.3.1 修改</span></a></h4><p>字典修改或添加数据原则：有则改之，无则加勉「无则添加」</p><img src="`+r+`" alt="5fd0d927b22cd876b7cb996d4074f32" style="zoom:25%;"><p>代码示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;99&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

grade<span class="token punctuation">[</span><span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment"># key in grade</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

grade<span class="token punctuation">[</span><span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;95&#39;</span> <span class="token comment"># key not in grade</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-3-2-删除" tabindex="-1"><a class="header-anchor" href="#_5-3-2-删除"><span>5.3.2 删除</span></a></h4><img src="`+d+`" alt="58b94750070db13f8faf3d50efe309e" style="zoom:25%;"><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 1.</span>
grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">del</span> grade<span class="token punctuation">[</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">]</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>



<span class="token comment"># 2.</span>
grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">del</span> grade <span class="token comment">#</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\code7.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">48</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>
NameError<span class="token punctuation">:</span> name <span class="token string">&#39;grade&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined



<span class="token comment"># 3.</span>
grade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;韩梅梅&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;马冬梅&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>
grade<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-3-3-获取列表的键和值" tabindex="-1"><a class="header-anchor" href="#_5-3-3-获取列表的键和值"><span>5.3.3 获取列表的键和值</span></a></h4><ul><li>keys()</li><li>values()</li><li>items()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>student <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;True&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>

<span class="token comment"># 获取所有的 key：</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 获取所有的 value：</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 同时获取 key 和 value：</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;True&#39;</span><span class="token punctuation">}</span>
dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">]</span>
dict_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;True&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;True&#39;</span><span class="token punctuation">]</span>
dict_items<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;实验班&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;True&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;实验班&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;True&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-3-4-判断字典中的元素" tabindex="-1"><a class="header-anchor" href="#_5-3-4-判断字典中的元素"><span>5.3.4 判断字典中的元素</span></a></h4><ul><li>默认情况</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 默认情况是判断 key 在字典中</span>
dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> dict1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;class&#39;</span> <span class="token keyword">in</span> dict1<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token boolean">True</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 keys 实现纯粹判断</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 也可以在后面加上 .values() 判断是否为字典中的值</span>
dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">19</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 values 实现纯粹判断</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-3-5-字典的排序" tabindex="-1"><a class="header-anchor" href="#_5-3-5-字典的排序"><span>5.3.5 字典的排序</span></a></h4><ol><li>以 key 排序</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>

sorted_dict <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 默认升序排序</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sorted_dict<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>sorted_dict<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">}</span>


<span class="token comment"># 指定以 key 排序</span>
dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>

sorted_dict <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># x[0] 代表为键</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sorted_dict<span class="token punctuation">)</span>

to_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>sorted_dict<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>to_dict<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>以 value 排序</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>

sorted_dict <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># x[1] 代表为键值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sorted_dict<span class="token punctuation">)</span>

to_dict <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>sorted_dict<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>to_dict<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">{</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><p>降序排序</p><ol><li><code>reverse</code></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
sorted_dict1 <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sorted_dict1<span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>[::-1]</code></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
sorted_dict2 <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sorted_dict2<span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_5-4-字典的嵌套" tabindex="-1"><a class="header-anchor" href="#_5-4-字典的嵌套"><span>5.4 字典的嵌套</span></a></h3><p>嵌套： 将一系列的字典存储在列表中，或将列表作为储存在字典中。</p><ul><li>字典列表</li><li>在字典中存储列表</li><li>在字典中存储字典</li></ul><ol><li>字典构成列表</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 字典构成列表</span>
student1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;18&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;98&#39;</span><span class="token punctuation">}</span>
student2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;19&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;99&#39;</span><span class="token punctuation">}</span>
student3 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;18&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span>

student <span class="token operator">=</span> <span class="token punctuation">[</span>student1<span class="token punctuation">,</span> student2<span class="token punctuation">,</span> student3<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;18&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;19&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;18&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;95&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在字典中存储列表</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>favorite_class <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;数学&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;英语&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;语文&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;madongmei&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">&#39;计算机&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;物理&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;数学&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>favorite_class<span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>favorite_class<span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token string">&#39;数学&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;英语&#39;</span><span class="token punctuation">]</span>
数学
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>在字典中存储字典</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 用一个字典表示学生信息</span>
student1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">}</span>


<span class="token comment"># 用一个字典表示全班学生信息</span>
class1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;lilei&#39;</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;95&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span><span class="token boolean">False</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>class1<span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>class1<span class="token punctuation">[</span><span class="token string">&#39;lilei&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>class1<span class="token punctuation">[</span><span class="token string">&#39;hanmeimei&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;实验班&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;成绩&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;98&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;实验班&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span>
<span class="token number">98</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-练习" tabindex="-1"><a class="header-anchor" href="#_6-练习"><span>6. 练习</span></a></h2><h3 id="题目-1" tabindex="-1"><a class="header-anchor" href="#题目-1"><span>题目 1</span></a></h3><p><strong>描述</strong>：给定一个字典，其中键是学生的名字，值是一个元组，包含学生的年龄和他们的成绩。编写一个函数，该函数返回按年龄从小到大排序的学生名单。</p><p><strong>示例输入</strong>：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>students <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;Alice&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Charlie&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例输出</strong>：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token punctuation">[</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Charlie&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="题目-2" tabindex="-1"><a class="header-anchor" href="#题目-2"><span>题目 2</span></a></h3><p><strong>描述</strong>：给定一个字典，其中键是商品的名字，值是商品的价格。编写一个函数，计算字典中所有商品的平均价格，并返回低于平均价格的商品的名称列表。</p><p><strong>示例输入</strong>：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>products <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;Apple&#39;</span><span class="token punctuation">:</span> <span class="token number">3.5</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Banana&#39;</span><span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Cherry&#39;</span><span class="token punctuation">:</span> <span class="token number">5.0</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Date&#39;</span><span class="token punctuation">:</span> <span class="token number">4.0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例输出</strong>：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token punctuation">[</span><span class="token string">&#39;Banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Date&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="题目-3" tabindex="-1"><a class="header-anchor" href="#题目-3"><span>题目 3</span></a></h3><p><strong>描述</strong>：给定两个字典，编写一个函数，将这两个字典合并成一个。如果同一个键在两个字典中都有，则它的值应为两个字典中的值相加。假设字典中的值都是整数。</p><p><strong>示例输入</strong>：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
dict2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例输出</strong>：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,83);function _(x,w){const o=i("CodeTabs");return l(),u("div",null,[v,k(o,{id:"95",data:[{id:"code1"},{id:"code2"},{id:"code3"}]},{title0:a(({value:t,isActive:p})=>[s("code1")]),title1:a(({value:t,isActive:p})=>[s("code2")]),title2:a(({value:t,isActive:p})=>[s("code3")]),tab0:a(({value:t,isActive:p})=>[b]),tab1:a(({value:t,isActive:p})=>[g]),tab2:a(({value:t,isActive:p})=>[y]),_:1}),h])}const A=c(m,[["render",_],["__file","7.dictionary.html.vue"]]),N=JSON.parse('{"path":"/Notability/python/7.dictionary.html","title":"7. Dictionary","lang":"zh-CN","frontmatter":{"title":"7. Dictionary","date":"2024-04-20T07:32:05.000Z","isOriginal":true,"category":["python"],"tag":["python","编程","教程"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 如何构建一个电话薄 我们有以下联系人： 如何用以往学过的知识构建要给具有用户输入查询功能的电话薄 变量、数字型、列表、元组、字符串 程序运行效果： 测试一： 测试二： 2. 字典结构 用花括号表示字典 字典内每一项都有两个元素组成：key and value {key: value, key: value} 各项用逗号隔开 3. 字典结构 key...","head":[["meta",{"property":"og:url","content":"https://dailyrecord4ryan.com/Notability/python/7.dictionary.html"}],["meta",{"property":"og:site_name","content":"Website of Ryan"}],["meta",{"property":"og:title","content":"7. Dictionary"}],["meta",{"property":"og:description","content":"1. 如何构建一个电话薄 我们有以下联系人： 如何用以往学过的知识构建要给具有用户输入查询功能的电话薄 变量、数字型、列表、元组、字符串 程序运行效果： 测试一： 测试二： 2. 字典结构 用花括号表示字典 字典内每一项都有两个元素组成：key and value {key: value, key: value} 各项用逗号隔开 3. 字典结构 key..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-07T04:09:18.000Z"}],["meta",{"property":"article:author","content":"Ryan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-04-20T07:32:05.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-07T04:09:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7. Dictionary\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-20T07:32:05.000Z\\",\\"dateModified\\":\\"2024-05-07T04:09:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan\\",\\"url\\":\\"https://dailyrecord4ryan.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 如何构建一个电话薄","slug":"_1-如何构建一个电话薄","link":"#_1-如何构建一个电话薄","children":[]},{"level":2,"title":"2.  字典结构","slug":"_2-字典结构","link":"#_2-字典结构","children":[]},{"level":2,"title":"3. 字典结构 key & value","slug":"_3-字典结构-key-value","link":"#_3-字典结构-key-value","children":[{"level":3,"title":"4. 用字典 dict 函数创建字典","slug":"_4-用字典-dict-函数创建字典","link":"#_4-用字典-dict-函数创建字典","children":[]}]},{"level":2,"title":"5. 访问字典数据","slug":"_5-访问字典数据","link":"#_5-访问字典数据","children":[{"level":3,"title":"5.1 中括号访问","slug":"_5-1-中括号访问","link":"#_5-1-中括号访问","children":[]},{"level":3,"title":"5.2 访问字典键","slug":"_5-2-访问字典键","link":"#_5-2-访问字典键","children":[{"level":4,"title":"5.2.1 如何区分两者的使用场景呢？","slug":"_5-2-1-如何区分两者的使用场景呢","link":"#_5-2-1-如何区分两者的使用场景呢","children":[]}]},{"level":3,"title":"5.3  字典的操作","slug":"_5-3-字典的操作","link":"#_5-3-字典的操作","children":[{"level":4,"title":"5.3.1 修改","slug":"_5-3-1-修改","link":"#_5-3-1-修改","children":[]},{"level":4,"title":"5.3.2 删除","slug":"_5-3-2-删除","link":"#_5-3-2-删除","children":[]},{"level":4,"title":"5.3.3 获取列表的键和值","slug":"_5-3-3-获取列表的键和值","link":"#_5-3-3-获取列表的键和值","children":[]},{"level":4,"title":"5.3.4 判断字典中的元素","slug":"_5-3-4-判断字典中的元素","link":"#_5-3-4-判断字典中的元素","children":[]},{"level":4,"title":"5.3.5 字典的排序","slug":"_5-3-5-字典的排序","link":"#_5-3-5-字典的排序","children":[]}]},{"level":3,"title":"5.4 字典的嵌套","slug":"_5-4-字典的嵌套","link":"#_5-4-字典的嵌套","children":[]}]},{"level":2,"title":"6. 练习","slug":"_6-练习","link":"#_6-练习","children":[{"level":3,"title":"题目 1","slug":"题目-1","link":"#题目-1","children":[]},{"level":3,"title":"题目 2","slug":"题目-2","link":"#题目-2","children":[]},{"level":3,"title":"题目 3","slug":"题目-3","link":"#题目-3","children":[]}]}],"git":{"createdTime":1713572408000,"updatedTime":1715054958000,"contributors":[{"name":"Lxj679","email":"2944170474@qq.com","commits":13}]},"readingTime":{"minutes":8.07,"words":2420},"filePathRelative":"Notability/python/7.dictionary.md","localizedDate":"2024年4月20日","excerpt":"<h2>1. 如何构建一个电话薄</h2>\\n<p>我们有以下联系人：</p>\\n<table>\\n<thead>\\n<tr>\\n<th>姓名</th>\\n<th>手机号</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>李雷</td>\\n<td>123456</td>\\n</tr>\\n<tr>\\n<td>韩梅梅</td>\\n<td>132456</td>\\n</tr>\\n<tr>\\n<td>大卫</td>\\n<td>154389</td>\\n</tr>\\n<tr>\\n<td>Mr.Liu</td>\\n<td>131452</td>\\n</tr>\\n<tr>\\n<td>Bornforthis</td>\\n<td>180595</td>\\n</tr>\\n<tr>\\n<td>Alexa</td>\\n<td>131559</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{A as comp,N as data};
