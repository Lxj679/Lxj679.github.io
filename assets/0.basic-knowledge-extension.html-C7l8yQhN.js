import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as p}from"./app-W62Go7Rl.js";const t="/assets/b0d64ef3132b812987b53452acc1f87-va11uNag.png",e="/assets/image-20240418185318870-D8VRqau6.png",o={},c=p('<h1 id="引言-这篇文章旨在为-ryan-本人服务" tabindex="-1"><a class="header-anchor" href="#引言-这篇文章旨在为-ryan-本人服务"><span>引言： 这篇文章旨在为 Ryan 本人服务</span></a></h1><p>*号 部分为作者认为不太熟练的知识点</p><h2 id="_1-基本语法元素" tabindex="-1"><a class="header-anchor" href="#_1-基本语法元素"><span>1. 基本语法元素</span></a></h2><h3 id="_1-1-格式化输出" tabindex="-1"><a class="header-anchor" href="#_1-1-格式化输出"><span>1.1 格式化输出</span></a></h3><img src="'+t+`" alt="format的格式" style="zoom:33%;"><ol><li><strong>填充输出</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 右对齐</span>
a <span class="token operator">=</span> <span class="token number">123</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:_&gt;4}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># _123</span>
b <span class="token operator">=</span> <span class="token number">1111</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:&amp;&gt;10}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &amp;&amp;&amp;&amp;&amp;&amp;1111</span>
<span class="token comment"># 左对齐</span>
a <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:*&lt;5}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># a****</span>
<span class="token comment"># 居中</span>
a <span class="token operator">=</span> <span class="token string">&#39;middle&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:#^16}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># #####middle#####</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:#^15}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># ####middle#####</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:#^17}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># #####middle######</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>数字千分位分隔符</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 显示1,000,000</span>
a <span class="token operator">=</span> <span class="token number">1000000</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:,}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1,000,000</span>

<span class="token comment"># 填充优先级高于千分位</span>
a <span class="token operator">=</span> <span class="token number">1000000</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:*&gt;20,}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># ***********1,000,000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>浮点数简化输出</strong></li></ol><ul><li>留两位小数</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">3.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.2f}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 3.14</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>按百分数输出</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">3.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:%}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 314.159260%</span>


a <span class="token operator">=</span> <span class="token number">3.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.1%}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 314.2%</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>科学计数法输出</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">0.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:e}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1.415926e-01</span>


a <span class="token operator">=</span> <span class="token number">0.0000926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.2e}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 9.26e-05</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>整数的进制转换输出</strong></li></ol><ul><li>十进制整数转二进制、unicode码、十进制、八进制、十六进制输出</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;二进制{0:b}, Unicode码{0:c}, 十进制{0:d}, 八进制{0:o}, 十六进制{0:x}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">450</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output: 二进制111000010, Unicode码ǂ, 十进制450, 八进制702, 十六进制1c2 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-程序格式" tabindex="-1"><a class="header-anchor" href="#_1-2-程序格式"><span>1.2 程序格式</span></a></h3><h4 id="_1-最大行长度" tabindex="-1"><a class="header-anchor" href="#_1-最大行长度"><span>1. 最大行长度</span></a></h4><p>所有行限制的最大字符数为 79</p><h4 id="_2-缩进" tabindex="-1"><a class="header-anchor" href="#_2-缩进"><span>2. 缩进</span></a></h4><ul><li>用缩进来表示语句间的逻辑</li><li>在 for while if def class等:之后下一行开始进行缩进，表明后续代码与前句之间的从属关系</li><li>缩进量:4字符</li></ul><h4 id="_3-使用空格" tabindex="-1"><a class="header-anchor" href="#_3-使用空格"><span>3.使用空格</span></a></h4><ul><li>二元运算符两边加一个加空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">2</span>
x <span class="token operator">+=</span> <span class="token number">4</span>
<span class="token number">6</span> <span class="token operator">&gt;</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用不同优先级的运算符，考虑在最低优先级的运算符周围添加空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> x<span class="token operator">*</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span>
z <span class="token operator">=</span> x<span class="token operator">*</span><span class="token number">2</span> <span class="token operator">+</span> y<span class="token operator">*</span>y
c <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token operator">-</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在逗号后使用空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>
ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>不要使用一个以上的空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span>             <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-避免使用空格" tabindex="-1"><a class="header-anchor" href="#_4-避免使用空格"><span>4. 避免使用空格</span></a></h4><ul><li>在指定关键字参数或者默认参数值的时候，不要在 = 附近加上空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">fun</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> m<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    pritn<span class="token punctuation">(</span>n<span class="token punctuation">,</span> m<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结：</span></a></h4><ol><li><strong>以上属于PEP8格式指南的部分内容，养成良好的编码规范利人利己</strong></li><li><strong>格式约定的目的:</strong><ol><li>使大量Python代码风格一致</li><li>提升代码可读性</li></ol></li><li><strong>尽信书不如无书，不应死板教条的执行格式规范</strong><ol><li>项目规范优先</li></ol></li></ol><h2 id="_2-基本数据类型" tabindex="-1"><a class="header-anchor" href="#_2-基本数据类型"><span>2. 基本数据类型</span></a></h2><h3 id="_2-1-数字型" tabindex="-1"><a class="header-anchor" href="#_2-1-数字型"><span>2.1 数字型</span></a></h3><h4 id="_2-1-1-整数————不同进制的转换" tabindex="-1"><a class="header-anchor" href="#_2-1-1-整数————不同进制的转换"><span>2.1.1. 整数————不同进制的转换</span></a></h4><p>默认输入：十进制</p><p>二进制：<code>0b</code></p><p>八进制：<code>0o</code></p><p>十六进制：<code>0x</code></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">16</span> <span class="token operator">==</span> <span class="token number">0b10000</span> <span class="token operator">==</span> <span class="token number">0o20</span> <span class="token operator">==</span> <span class="token number">0x10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>十进制与其他进制的转换</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>
b <span class="token operator">=</span> <span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment"># 8</span>
c <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment"># 16</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">0b10000</span> <span class="token number">0o20</span> <span class="token number">0x10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>转换后的结果会变为字符串（str）类型</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><ul><li>其他进制转换为十进制</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>

d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 二进制转十进制</span>
e <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment"># 八进制转十进制</span>
f <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment"># 十六进制转十进制</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">)</span> 

<span class="token comment"># output</span>
<span class="token number">16</span> <span class="token number">16</span> <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-2-浮点数" tabindex="-1"><a class="header-anchor" href="#_2-1-2-浮点数"><span>2.1.2. 浮点数</span></a></h4><ul><li><ul><li><ul><li>不确定小数问题**</li></ul></li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>print((0.1 + 0.2) == 0.3) # False
print(0.1 + 0.2) # 0.30000000000000004
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>产生该问题的原因：</strong></li></ul><p>浮点数小数部分在计算机是由二进制表示的，二进制小数不能表示所有的十进制小数</p><img src="`+e+`" alt="二进制和十进制实际数值" style="zoom:50%;"><ul><li><strong>通常情况下不会影响精度</strong></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.7</span><span class="token punctuation">)</span> <span class="token comment"># 0.7999999999999999</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>如何求得真正想表达的十进制：————四舍五入(<code>.round()</code>)</strong></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">0.1</span>
b <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 0.30000000000000004</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># 0.3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0.3</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-3-虚数" tabindex="-1"><a class="header-anchor" href="#_2-1-3-虚数"><span>2.1.3. *虚数</span></a></h4><ul><li>格式：<code>a + bj</code> 或 <code>a + bJ</code></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">4j</span>
b <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">5J</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">4j</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">5j</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>若虚部数值为 1， 也要写成 1j</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> j
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\basic_knowledge_extension\\Data_type\\imaginary_number.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> j
NameError<span class="token punctuation">:</span> name <span class="token string">&#39;j&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="_2-1-4-数字型的函数" tabindex="-1"><a class="header-anchor" href="#_2-1-4-数字型的函数"><span>2.1.4. 数字型的函数</span></a></h4><ul><li>绝对值 abs()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">4j</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 对复数a+bj 执行的是求模运算(a^2+b^2)^0.5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>幂次方 pow()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 32</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 等价于 (2^5) % 3 = 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>四舍五入 round</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1.618</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 默认状态下四舍五入保留零位小数</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 保留两位小数</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 位数不足时， 无需不起！！！！！！</span>

<span class="token comment"># output</span>
<span class="token number">2</span>
<span class="token number">1.62</span>
<span class="token number">1.618</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>整除返回商和模 divmod()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token builtin">divmod</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 整除数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># 余数</span>

<span class="token comment"># output</span>
<span class="token number">3</span>
<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>最大/小值 max()/min()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">333</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">222</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token number">111</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
NameError                                 Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
Cell In<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> line <span class="token number">1</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token builtin">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>

NameError<span class="token punctuation">:</span> name <span class="token string">&#39;a&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined

In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span>a<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
NameError                                 Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
Cell In<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> line <span class="token number">1</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token builtin">max</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span>a<span class="token punctuation">)</span>

NameError<span class="token punctuation">:</span> name <span class="token string">&#39;A&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>求和 sum()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ul><li>科学计算库 math、numpy、scipy</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math <span class="token comment"># 导入库</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 指数运算</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>log2<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 对数运算</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 开平方运算</span>

<span class="token comment"># output</span>
<span class="token number">2.718281828459045</span>
<span class="token number">1.0</span>
<span class="token number">2.0</span>

<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 求平均值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 求中位数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 求标准差</span>

<span class="token comment"># output</span>
<span class="token number">3.0</span>
<span class="token number">3.0</span>
<span class="token number">1.4142135623730951</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-字符串" tabindex="-1"><a class="header-anchor" href="#_2-2-字符串"><span>2.2 字符串</span></a></h3><h4 id="_2-2-1-字符串的成倍复制" tabindex="-1"><a class="header-anchor" href="#_2-2-1-字符串的成倍复制"><span>2.2.1 字符串的成倍复制</span></a></h4><p>Str * n 或 n * Str</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token string">&#39;----21&#39;</span>
b <span class="token operator">=</span> <span class="token string">&#39;can you do something for me----&#39;</span>
c <span class="token operator">=</span> a <span class="token operator">+</span> b
<span class="token keyword">print</span><span class="token punctuation">(</span>c <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> c<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>


<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-2-判断子集是否在字符串内-in" tabindex="-1"><a class="header-anchor" href="#_2-2-2-判断子集是否在字符串内-in"><span>2.2.2 判断子集是否在字符串内 in</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>Str <span class="token operator">=</span> <span class="token string">&#39;hello, my name is ryan.&#39;</span>
str1 <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
str2 <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str1 <span class="token keyword">in</span> Str<span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str2 <span class="token keyword">in</span> Str<span class="token punctuation">)</span> <span class="token comment"># False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-3-字符编码" tabindex="-1"><a class="header-anchor" href="#_2-2-3-字符编码"><span>2.2.3 字符编码</span></a></h4><p>将中文字库，英文字母、数字、特殊字符等转化成计算机可识别的二进制数</p><p>::: tips</p><ol><li>Python 中使用的是 Unicode 编码</li><li>每个单一字符对应一个唯一的互不重复的二进制编码</li></ol><p>:::</p><ol><li>将字符转化为 Unicode 码 ord()</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;你&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;坏&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">49</span>
<span class="token number">50</span>
<span class="token number">97</span>
<span class="token number">20320</span>
<span class="token number">22351</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>将 Unicode 码转化为字符 chr()</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">1010</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">12345</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">23456</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
ϲ
✐
〹
宠
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-布尔型" tabindex="-1"><a class="header-anchor" href="#_2-3-布尔型"><span>2.3 布尔型</span></a></h3><h4 id="_2-3-1-判断是否全为真-假-any-和-all" tabindex="-1"><a class="header-anchor" href="#_2-3-1-判断是否全为真-假-any-和-all"><span>2.3.1 判断是否全为真/假 <code>any()</code> 和 <code>all()</code></span></a></h4><h2 id="_3-组合数据类型" tabindex="-1"><a class="header-anchor" href="#_3-组合数据类型"><span>3. 组合数据类型</span></a></h2><h3 id="_3-1-列表" tabindex="-1"><a class="header-anchor" href="#_3-1-列表"><span>3.1 列表</span></a></h3><h4 id="range" tabindex="-1"><a class="header-anchor" href="#range"><span>range()</span></a></h4><p>range(起始数字,结束数字（不包含）,步长)</p><ol><li>必须包含终止位置</li><li>默认起始数字是 0</li><li>默认步长是 1</li></ol><ul><li>range() 就这两种写法：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">0</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token number">4</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>range() 转其他数据类型</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lst1 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
lst2 <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
lst3 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
lst4 <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 不可以</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>lst1<span class="token punctuation">,</span> lst2<span class="token punctuation">,</span> lst3<span class="token punctuation">,</span> lst4<span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-元组" tabindex="-1"><a class="header-anchor" href="#_3-2-元组"><span>3.2 元组</span></a></h3><ol><li><p>zip</p></li><li><p>返回值不止一个的函数，默认返回一个元组</p></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
a <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
a<span class="token punctuation">,</span> b <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\basic_knowledge_extension\\Combination_type\\List.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">45</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    a<span class="token punctuation">,</span> b <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
ValueError<span class="token punctuation">:</span> too many values to unpack <span class="token punctuation">(</span>expected <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">4</span> <span class="token number">8</span> <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-字典" tabindex="-1"><a class="header-anchor" href="#_3-3-字典"><span>3.3 字典</span></a></h4><p>一些常用于列表（list）中的操作的括号中的元素位置一般在字典中用字典键取代，如：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># a</span>

dict1<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;d&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> <span class="token comment"># {11: &#39;a&#39;, 22: &#39;b&#39;, 33: &#39;c&#39;, 44: &#39;d&#39;}</span>

<span class="token keyword">del</span> dict1<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> <span class="token comment"># {11: &#39;a&#39;, 22: &#39;b&#39;, 33: &#39;c&#39;}</span>

dict1<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> <span class="token comment"># {11: &#39;a&#39;, 22: &#39;b&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>特殊的：</p><ol><li><code>key(), value(), items()</code></li></ol><p>不加 <code>list() </code>默认状态下，返回的东西很奇怪！</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
key <span class="token operator">=</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
value <span class="token operator">=</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>
item <span class="token operator">=</span> dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># output</span>
dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
dict_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
dict_items<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


keys <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
values <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
items <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> values<span class="token punctuation">,</span> items<span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>in()</code></li></ol><p>即可以判断 key 也可以判断 value———— dict 不加 .value() 或 .key() 默认判断 key 值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">in</span> dict1<span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>popitem()</code></li></ol><p>随机删除字典中的一对键与键值，一个返回变量返回元组，两个分别返回键和键值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">:</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>
key_and_value <span class="token operator">=</span> dict1<span class="token punctuation">.</span>popitem<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>key_and_value<span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> 

key<span class="token punctuation">,</span> value <span class="token operator">=</span> dict1<span class="token punctuation">.</span>popitem<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token number">33</span>
c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><code>get()</code></li></ol><p>value = get()</p><p>用于输入一个 key，返回其在字典内的 value，没有该 key 则返回默认值 none 或 设置的值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token comment"># a</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token comment"># None</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>get<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;wtf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># a</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>get<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&#39;wtf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># wtf</span>

value1 <span class="token operator">=</span> dict1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>value1<span class="token punctuation">)</span> <span class="token comment"># a</span>

value2 <span class="token operator">=</span> dict1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;wtf&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>value2<span class="token punctuation">)</span> <span class="token comment"># a</span>

value3 <span class="token operator">=</span> dict1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>value3<span class="token punctuation">)</span> <span class="token comment"># None</span>

value4 <span class="token operator">=</span> dict1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token string">&#39;wtf&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>value4<span class="token punctuation">)</span> <span class="token comment"># wtf</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>clear()</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">:</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>
dict1<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> <span class="token comment"># {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>del 和 clear 的区别在于：</p><p>del dict 直接把字典 dict 删除 ，运行结果会报错</p><p>而 clear 是清空字典</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">:</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>
dict1<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> 
<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span>


dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">:</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">del</span> dict1
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>
<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\basic_knowledge_extension\\Data_type\\dict.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">70</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>
NameError<span class="token punctuation">:</span> name <span class="token string">&#39;dict1&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><ul><li>字典的嵌套使用：</li></ul><ol><li><p>列表嵌套字典</p></li><li><p>字典嵌套字典</p></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>class1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;mike&#39;</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>class1<span class="token punctuation">[</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>class1<span class="token punctuation">[</span><span class="token string">&#39;mike&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;grade&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">7</span>
<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-集合" tabindex="-1"><a class="header-anchor" href="#_3-4-集合"><span>3.4 集合</span></a></h3><p>集合里元素的 “位置” 不固定，每次打印集合元素的前后顺序都是随机的</p><h4 id="_3-4-1-数学运算" tabindex="-1"><a class="header-anchor" href="#_3-4-1-数学运算"><span>3.4.1 数学运算</span></a></h4><p>数学运算的结果都是返回一个新的集合</p><ol><li>交集 &amp;</li><li>并集 |</li><li>两集合的非交集部分 ^</li><li>补集（在前者但不在后者）-</li></ol><h4 id="_3-4-2-操作" tabindex="-1"><a class="header-anchor" href="#_3-4-2-操作"><span>3.4.2 操作</span></a></h4><ul><li>增删元素 add(), remove()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>starts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
starts<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>starts<span class="token punctuation">)</span>
starts<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>starts<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,142),l=[c];function i(u,r){return s(),a("div",null,l)}const m=n(o,[["render",i],["__file","0.basic-knowledge-extension.html.vue"]]),v=JSON.parse(`{"path":"/Notability/python/0.basic-knowledge-extension.html","title":"basic knowledge extension for Python","lang":"zh-CN","frontmatter":{"title":"basic knowledge extension for Python","date":"2024-04-18T07:51:22.000Z","isOriginal":true,"category":["python"],"tag":["python","编程","教程"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"引言： 这篇文章旨在为 Ryan 本人服务 *号 部分为作者认为不太熟练的知识点 1. 基本语法元素 1.1 格式化输出 format的格式 填充输出 数字千分位分隔符 浮点数简化输出 留两位小数 按百分数输出 科学计数法输出 整数的进制转换输出 十进制整数转二进制、unicode码、十进制、八进制、十六进制输出 1.2 程序格式 1. 最大行长度 所...","head":[["meta",{"property":"og:url","content":"https://dailyrecord4ryan.com/Notability/python/0.basic-knowledge-extension.html"}],["meta",{"property":"og:site_name","content":"Website of Ryan"}],["meta",{"property":"og:title","content":"basic knowledge extension for Python"}],["meta",{"property":"og:description","content":"引言： 这篇文章旨在为 Ryan 本人服务 *号 部分为作者认为不太熟练的知识点 1. 基本语法元素 1.1 格式化输出 format的格式 填充输出 数字千分位分隔符 浮点数简化输出 留两位小数 按百分数输出 科学计数法输出 整数的进制转换输出 十进制整数转二进制、unicode码、十进制、八进制、十六进制输出 1.2 程序格式 1. 最大行长度 所..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-19T07:30:14.000Z"}],["meta",{"property":"article:author","content":"Ryan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-04-18T07:51:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-19T07:30:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"basic knowledge extension for Python\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-18T07:51:22.000Z\\",\\"dateModified\\":\\"2024-04-19T07:30:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan\\",\\"url\\":\\"https://dailyrecord4ryan.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 基本语法元素","slug":"_1-基本语法元素","link":"#_1-基本语法元素","children":[{"level":3,"title":"1.1 格式化输出","slug":"_1-1-格式化输出","link":"#_1-1-格式化输出","children":[]},{"level":3,"title":"1.2 程序格式","slug":"_1-2-程序格式","link":"#_1-2-程序格式","children":[{"level":4,"title":"1. 最大行长度","slug":"_1-最大行长度","link":"#_1-最大行长度","children":[]},{"level":4,"title":"2. 缩进","slug":"_2-缩进","link":"#_2-缩进","children":[]},{"level":4,"title":"3.使用空格","slug":"_3-使用空格","link":"#_3-使用空格","children":[]},{"level":4,"title":"4. 避免使用空格","slug":"_4-避免使用空格","link":"#_4-避免使用空格","children":[]},{"level":4,"title":"小结：","slug":"小结","link":"#小结","children":[]}]}]},{"level":2,"title":"2. 基本数据类型","slug":"_2-基本数据类型","link":"#_2-基本数据类型","children":[{"level":3,"title":"2.1 数字型","slug":"_2-1-数字型","link":"#_2-1-数字型","children":[{"level":4,"title":"2.1.1. 整数————不同进制的转换","slug":"_2-1-1-整数————不同进制的转换","link":"#_2-1-1-整数————不同进制的转换","children":[]},{"level":4,"title":"2.1.2. 浮点数","slug":"_2-1-2-浮点数","link":"#_2-1-2-浮点数","children":[]},{"level":4,"title":"2.1.3. *虚数","slug":"_2-1-3-虚数","link":"#_2-1-3-虚数","children":[]},{"level":4,"title":"2.1.4. 数字型的函数","slug":"_2-1-4-数字型的函数","link":"#_2-1-4-数字型的函数","children":[]}]},{"level":3,"title":"2.2  字符串","slug":"_2-2-字符串","link":"#_2-2-字符串","children":[{"level":4,"title":"2.2.1 字符串的成倍复制","slug":"_2-2-1-字符串的成倍复制","link":"#_2-2-1-字符串的成倍复制","children":[]},{"level":4,"title":"2.2.2 判断子集是否在字符串内 in","slug":"_2-2-2-判断子集是否在字符串内-in","link":"#_2-2-2-判断子集是否在字符串内-in","children":[]},{"level":4,"title":"2.2.3 字符编码","slug":"_2-2-3-字符编码","link":"#_2-2-3-字符编码","children":[]}]},{"level":3,"title":"2.3 布尔型","slug":"_2-3-布尔型","link":"#_2-3-布尔型","children":[{"level":4,"title":"2.3.1 判断是否全为真/假 any() 和 all()","slug":"_2-3-1-判断是否全为真-假-any-和-all","link":"#_2-3-1-判断是否全为真-假-any-和-all","children":[]}]}]},{"level":2,"title":"3. 组合数据类型","slug":"_3-组合数据类型","link":"#_3-组合数据类型","children":[{"level":3,"title":"3.1 列表","slug":"_3-1-列表","link":"#_3-1-列表","children":[{"level":4,"title":"range()","slug":"range","link":"#range","children":[]}]},{"level":3,"title":"3.2  元组","slug":"_3-2-元组","link":"#_3-2-元组","children":[{"level":4,"title":"3.3 字典","slug":"_3-3-字典","link":"#_3-3-字典","children":[]}]},{"level":3,"title":"3.4 集合","slug":"_3-4-集合","link":"#_3-4-集合","children":[{"level":4,"title":"3.4.1 数学运算","slug":"_3-4-1-数学运算","link":"#_3-4-1-数学运算","children":[]},{"level":4,"title":"3.4.2 操作","slug":"_3-4-2-操作","link":"#_3-4-2-操作","children":[]}]}]}],"git":{"createdTime":1713397939000,"updatedTime":1713511814000,"contributors":[{"name":"Lxj679","email":"2944170474@qq.com","commits":29}]},"readingTime":{"minutes":8.53,"words":2559},"filePathRelative":"Notability/python/0.basic-knowledge-extension.md","localizedDate":"2024年4月18日","excerpt":"\\n<p>*号 部分为作者认为不太熟练的知识点</p>\\n<h2>1. 基本语法元素</h2>\\n<h3>1.1 格式化输出</h3>\\n\\n<ol>\\n<li><strong>填充输出</strong></li>\\n</ol>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\"># 右对齐</span>\\na <span class=\\"token operator\\">=</span> <span class=\\"token number\\">123</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:_&gt;4}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># _123</span>\\nb <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1111</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:&amp;&gt;10}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># &amp;&amp;&amp;&amp;&amp;&amp;1111</span>\\n<span class=\\"token comment\\"># 左对齐</span>\\na <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'a'</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:*&lt;5}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># a****</span>\\n<span class=\\"token comment\\"># 居中</span>\\na <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'middle'</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:#^16}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># #####middle#####</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:#^15}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># ####middle#####</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:#^17}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># #####middle######</span>\\n</code></pre></div>","autoDesc":true}`);export{m as comp,v as data};
