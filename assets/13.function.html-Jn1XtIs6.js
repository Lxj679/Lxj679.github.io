import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as u,c as r,e as o,w as a,a as l,b as n,d as s}from"./app-BIhyyJd-.js";const d={},k=l(`<h2 id="_1-函数的定义" tabindex="-1"><a class="header-anchor" href="#_1-函数的定义"><span>1. 函数的定义</span></a></h2><p>计算机中的函数————代码片段</p><ul><li>一段具有特定功能的、可重复使用的代码</li><li>用函数名来表示并通过函数名来完成功能调用</li></ul><h2 id="_2-使用函数的意义" tabindex="-1"><a class="header-anchor" href="#_2-使用函数的意义"><span>2. 使用函数的意义</span></a></h2><ul><li>代码的重复利用</li><li>减少程序中的代码重复量，使代码更加容易被理解；</li><li>让代码更易于维护与更新</li></ul><h2 id="_3-函数的使用" tabindex="-1"><a class="header-anchor" href="#_3-函数的使用"><span>3. 函数的使用</span></a></h2><ol><li>内置函数：</li></ol><ul><li>Python 编程语言中已经被定好功能的函数</li><li>可以直接调用来执行特定的任务</li></ul><ol start="2"><li>用户自定义函数</li></ol><ul><li>函数功能和使用方法都由用户决定</li></ul><h3 id="_3-1-使用一个函数" tabindex="-1"><a class="header-anchor" href="#_3-1-使用一个函数"><span>3.1 使用一个函数</span></a></h3><ul><li>python 中有许多的内置函数，我们可以直接使用他们，</li></ul><p>​ 如：</p><p>​ 输出函数 print()</p><p>​ 获取用户输入的函数 input()</p><p>​ 类型转换的函数 int() float() str()……</p><p>​ 除了内置函数外，Python还有内置的标准函数库</p><ul><li>当我们把这些额外函数库导入我们程序里时，我们可以用这些函数库提供的方法</li></ul><p>​ 访问这些函数时需要以<strong>库名.函数名</strong>的方式来使用</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math
a <span class="token operator">=</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token keyword">import</span> random 
a <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-1-random" tabindex="-1"><a class="header-anchor" href="#_3-1-1-random"><span>3.1.1 random</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

<span class="token comment"># 生成随机浮点数</span>
<span class="token comment"># 返回一个随机浮点数，范围在 [0.0, 1.0]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 返回一个随机浮点数，范围在 [5.5, 25.5]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">25.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 生成随机整肃</span>
<span class="token comment"># 返回一个随机整数，范围在 [10, 20] 之间</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 返回一个随机整数，范围在 [0, 100] 之间，步长为 5</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>



<span class="token comment"># 选择和洗牌</span>
<span class="token comment"># 从列表中随机选择一个元素</span>
my_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>my_list<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 从列表中根据权重随机选择三个元素</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>my_list<span class="token punctuation">,</span> weights<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 打乱列表</span>
random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>my_list<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_list<span class="token punctuation">)</span>


<span class="token comment"># 生成特定分布的随机数</span>
<span class="token comment"># 返回一个符合高斯分布（均值为 0，标准差为 1）的随机浮点数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>gauss<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">import</span> random
<span class="token comment"># 设置随机种子</span>
random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 里面的数字可以写任何数</span>

<span class="token comment"># 这将产生相同的随机数序列</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-2-math" tabindex="-1"><a class="header-anchor" href="#_3-1-2-math"><span>3.1.2 math</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token comment"># 正弦值</span>
angle_radius <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;sin(π/2) = &#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>angle_radius<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 余弦值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;cos(0) = &#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 正切值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;tan(π/4)=&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 反正弦值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;asin(1) =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>asin<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 反余弦值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;acos(0)=&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>acos<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 反正切值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;atan(1) =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>atan<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 自然数 e 的 x 次方</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;exp(1) =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># x 的自然对数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;log(e) =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>math<span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># x 的以 10 为底的对数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;log10(100) =&#39;</span> <span class="token punctuation">,</span> math<span class="token punctuation">.</span>log10<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># x 的 y 次幂</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;pow(2, 3) =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># x 的平方根</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;sqrt(16)  =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># x 的绝对值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;fabs(-10) =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>fabs<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 向上取整</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;ceil(3.7) =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span><span class="token number">3.7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 向下取整</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;floor(3.7) =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>floor<span class="token punctuation">(</span><span class="token number">3.7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 截断取整</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;trunc(3.7) =&#39;</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>trunc<span class="token punctuation">(</span><span class="token number">3.7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 输出自然数和 π</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>e<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-定义一个函数" tabindex="-1"><a class="header-anchor" href="#_3-2-定义一个函数"><span>3.2 定义一个函数</span></a></h3><p><strong>def</strong> 是 <strong>define</strong> 的缩写，表示定义一个函数</p><p>格式：</p><p><strong>def</strong> 函数名称():</p><p>​ 函数内的语句</p><p>当我们需要用这个函数时，直接写‘<code>函数名称 + ()</code>‘就即可</p><p>注意：<strong>函数名称中间不要有空格，可以用下划线代替</strong></p><p>示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">HelloUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span>

HelloUser<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
Hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">HelloUser</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># username 是参数</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hello!&#39;</span> <span class="token operator">+</span> username<span class="token punctuation">)</span>

HelloUser<span class="token punctuation">(</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 李雷也是参数</span>

<span class="token comment"># output</span>
Hello!李雷
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>传递参数</p><ul><li>位置参数</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 显示某次考试成绩</span>
<span class="token keyword">def</span> <span class="token function">TestGrade</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> grade<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&#39;的成绩是&#39;</span> <span class="token operator">+</span> grade <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>

TestGrade<span class="token punctuation">(</span><span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 李雷的成绩是99.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>关键字参数</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 显示某次考试成绩</span>
<span class="token keyword">def</span> <span class="token function">TestGrade</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> grade<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&#39;的成绩是&#39;</span> <span class="token operator">+</span> grade <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> 

TestGrade<span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;李雷&#39;</span><span class="token punctuation">,</span> grade <span class="token operator">=</span> <span class="token string">&#39;99&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 李雷的成绩是99.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>返回值</li></ul><p><strong>def 函数名称(<strong>参数1， 参数2，……</strong>):</strong></p><p>​ <strong>函数内的语句</strong></p><p>​ <strong>……</strong></p><p>​ return 返回内容</p><p>加粗部分是必须有的</p><p>代码示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">say_hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hi!&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;我是ryan&#39;</span><span class="token punctuation">)</span>

say_hi<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
Hi!
我是ryan
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sum_number <span class="token operator">=</span> a <span class="token operator">+</span> b
    <span class="token keyword">return</span> sum_number

value <span class="token operator">=</span> add<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>变量作用域</li></ul><p>函数内的变量和外部同名时，函数会优先使用内部变量，若内部没有该变量则使用外部</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>

<span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    a <span class="token operator">=</span> <span class="token number">2</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

hello<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">2</span>
<span class="token number">1</span>

    
    
    
    
a <span class="token operator">=</span> <span class="token number">1</span>

<span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

hello<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span>
<span class="token number">1</span>





a <span class="token operator">=</span> <span class="token number">1</span>

<span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 函数内的变量和外部同名时，函数会优先使用内部变量, 但是这里在后面</span>
    a <span class="token operator">=</span> <span class="token number">2</span>

hello<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\nonsense\\code3.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">232</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    hello<span class="token punctuation">(</span><span class="token punctuation">)</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\nonsense\\code3.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">229</span><span class="token punctuation">,</span> <span class="token keyword">in</span> hello
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
UnboundLocalError<span class="token punctuation">:</span> local variable <span class="token string">&#39;a&#39;</span> referenced before assignment
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如何防止报错：</p><p>引入全局变量 global</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> a
    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    a <span class="token operator">=</span> <span class="token number">2</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
hello<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span>
<span class="token number">1</span>
<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-练习" tabindex="-1"><a class="header-anchor" href="#_4-练习"><span>4. 练习</span></a></h2><h3 id="_4-1文本倒转与过滤" tabindex="-1"><a class="header-anchor" href="#_4-1文本倒转与过滤"><span>4.1文本倒转与过滤</span></a></h3><p>编写一个函数 <code>reverse_filter</code>，它接收一个字符串和一组字符，返回将字符串中不包含这些字符的部分倒序后的结果。例如，如果输入字符串为 &quot;hello world&quot;，字符集为 {&#39;l&#39;, &#39;o&#39;}，则应该返回 &quot;drw eh&quot;。</p>`,57),m=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"reverse_filter"),n("span",{class:"token punctuation"},"("),s("Str"),n("span",{class:"token punctuation"},","),s(" Chr"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`

    List `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"list"),n("span",{class:"token punctuation"},"("),s("Str"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token comment"},"# 去除包含字符"),s(`
    length `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("List"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),s("length"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" List"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token keyword"},"in"),s(" Chr"),n("span",{class:"token punctuation"},":"),s(`
            List`),n("span",{class:"token punctuation"},"."),s("pop"),n("span",{class:"token punctuation"},"("),s("i"),n("span",{class:"token punctuation"},")"),s(`
            i `),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),s(`

    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token builtin"},"str"),n("span",{class:"token punctuation"},"("),s("List"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},":"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),s(`

`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("reverse_filter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'hello world'"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},"'l'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'o'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"reversed_filter"),n("span",{class:"token punctuation"},"("),s("Str"),n("span",{class:"token punctuation"},","),s(" Chr"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    List `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"list"),n("span",{class:"token punctuation"},"("),s("Str"),n("span",{class:"token punctuation"},"."),s("strip"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    List_target `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(`

    `),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("Str"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" List"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token keyword"},"not"),s(),n("span",{class:"token keyword"},"in"),s(" Chr"),n("span",{class:"token punctuation"},":"),s(`
            List_target`),n("span",{class:"token punctuation"},"."),s("append"),n("span",{class:"token punctuation"},"("),s("List"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`

    result `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},"."),s("join"),n("span",{class:"token punctuation"},"("),s("List_target"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},":"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("result"),n("span",{class:"token punctuation"},")"),s(`

reversed_filter`),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'hello world'"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},"'l'"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},"'o'"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"reverse_filter"),n("span",{class:"token punctuation"},"("),s("text"),n("span",{class:"token punctuation"},","),s(" char_set"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    filtered_reversed `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"''"),s(`

    `),n("span",{class:"token keyword"},"for"),s(" char "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"reversed"),n("span",{class:"token punctuation"},"("),s("text"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token keyword"},"if"),s(" char "),n("span",{class:"token keyword"},"not"),s(),n("span",{class:"token keyword"},"in"),s(" char_set"),n("span",{class:"token punctuation"},":"),s(`
            filtered_reversed `),n("span",{class:"token operator"},"+="),s(` char
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"reverse_filter"),n("span",{class:"token punctuation"},"("),s("Str"),n("span",{class:"token punctuation"},","),s(" Chr"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`

    List `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"list"),n("span",{class:"token punctuation"},"("),s("Str"),n("span",{class:"token punctuation"},")"),s(`

    length `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("List"),n("span",{class:"token punctuation"},")"),s(`
    i `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(`
    `),n("span",{class:"token keyword"},"while"),s(" i "),n("span",{class:"token operator"},"<"),s(" length"),n("span",{class:"token punctuation"},":"),s(`

        `),n("span",{class:"token keyword"},"if"),s(" List"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token keyword"},"in"),s(" Chr"),n("span",{class:"token punctuation"},":"),s(`
            List`),n("span",{class:"token punctuation"},"."),s("pop"),n("span",{class:"token punctuation"},"("),s("i"),n("span",{class:"token punctuation"},")"),s(`

        `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
            i `),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),s(`

        length `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token builtin"},"len"),n("span",{class:"token punctuation"},"("),s("List"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},"''"),n("span",{class:"token punctuation"},"."),s("join"),n("span",{class:"token punctuation"},"("),s("List"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},":"),n("span",{class:"token punctuation"},":"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("h3",{id:"_4-2-数字拆分与重组",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_4-2-数字拆分与重组"},[n("span",null,"4.2 数字拆分与重组")])],-1),g=n("p",null,[s("创建一个函数 "),n("code",null,"split_and_combine"),s("，它接收一个正整数，将其拆分成单个数字，然后根据提供的模式重新组合这些数字。模式可以是 'odd', 'even', 或 'mix'。例如，输入数字为 1234567，模式为 'odd'，则应返回所有奇数位上的数字组合，即 1357。")],-1),_=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),w=n("div",{class:"language-python line-numbers-mode","data-ext":"py","data-title":"py"},[n("pre",{class:"language-python"},[n("code",null,`
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),f=l(`<h3 id="_4-3-音节计数器" tabindex="-1"><a class="header-anchor" href="#_4-3-音节计数器"><span>4.3 音节计数器</span></a></h3><p>编写一个函数 <code>syllable_count</code>，用于计算一个英文句子中的音节总数。这里可以简化音节的计算规则：每个包含元音字母（a, e, i, o, u, y）的连续字母序列算作一个音节。例如，句子 &quot;This is an example.&quot; 应该返回6个音节。</p><div class="language-python\\ line-numbers-mode" data-ext="python\\" data-title="python\\"><pre class="language-python\\"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-4-简易计算器" tabindex="-1"><a class="header-anchor" href="#_4-4-简易计算器"><span>4.4 简易计算器</span></a></h3><p>编写一个函数<code>calculator</code>，用于计算 num1 和 num2 之间通过 notation 之间的计算，其中 notation 可以是 ‘ + , - , * , / ’</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">calculator</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num2<span class="token punctuation">,</span> notation<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> notation <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
       <span class="token keyword">return</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>num1<span class="token punctuation">)</span> <span class="token operator">+</span> notation <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function x(L,T){const p=c("CodeTabs");return u(),r("div",null,[k,o(p,{id:"217",data:[{id:"code1"},{id:"code2"},{id:"code3"},{id:"code4"}]},{title0:a(({value:t,isActive:e})=>[s("code1")]),title1:a(({value:t,isActive:e})=>[s("code2")]),title2:a(({value:t,isActive:e})=>[s("code3")]),title3:a(({value:t,isActive:e})=>[s("code4")]),tab0:a(({value:t,isActive:e})=>[m]),tab1:a(({value:t,isActive:e})=>[v]),tab2:a(({value:t,isActive:e})=>[b]),tab3:a(({value:t,isActive:e})=>[h]),_:1}),y,g,o(p,{id:"237",data:[{id:"code1"},{id:"code2"}]},{title0:a(({value:t,isActive:e})=>[s("code1")]),title1:a(({value:t,isActive:e})=>[s("code2")]),tab0:a(({value:t,isActive:e})=>[_]),tab1:a(({value:t,isActive:e})=>[w]),_:1}),f])}const A=i(d,[["render",x],["__file","13.function.html.vue"]]),P=JSON.parse('{"path":"/Notability/python/13.function.html","title":"13. function","lang":"zh-CN","frontmatter":{"title":"13. function","date":"2024-05-15T12:35:40.000Z","isOriginal":true,"category":["python"],"tag":["python","编程","教程"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 函数的定义 计算机中的函数————代码片段 一段具有特定功能的、可重复使用的代码 用函数名来表示并通过函数名来完成功能调用 2. 使用函数的意义 代码的重复利用 减少程序中的代码重复量，使代码更加容易被理解； 让代码更易于维护与更新 3. 函数的使用 内置函数： Python 编程语言中已经被定好功能的函数 可以直接调用来执行特定的任务 用户自定...","head":[["meta",{"property":"og:url","content":"https://dailyrecord4ryan.com/Notability/python/13.function.html"}],["meta",{"property":"og:site_name","content":"Website of Ryan"}],["meta",{"property":"og:title","content":"13. function"}],["meta",{"property":"og:description","content":"1. 函数的定义 计算机中的函数————代码片段 一段具有特定功能的、可重复使用的代码 用函数名来表示并通过函数名来完成功能调用 2. 使用函数的意义 代码的重复利用 减少程序中的代码重复量，使代码更加容易被理解； 让代码更易于维护与更新 3. 函数的使用 内置函数： Python 编程语言中已经被定好功能的函数 可以直接调用来执行特定的任务 用户自定..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-20T12:31:52.000Z"}],["meta",{"property":"article:author","content":"Ryan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-05-15T12:35:40.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-20T12:31:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"13. function\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-15T12:35:40.000Z\\",\\"dateModified\\":\\"2024-05-20T12:31:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan\\",\\"url\\":\\"https://dailyrecord4ryan.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 函数的定义","slug":"_1-函数的定义","link":"#_1-函数的定义","children":[]},{"level":2,"title":"2. 使用函数的意义","slug":"_2-使用函数的意义","link":"#_2-使用函数的意义","children":[]},{"level":2,"title":"3. 函数的使用","slug":"_3-函数的使用","link":"#_3-函数的使用","children":[{"level":3,"title":"3.1 使用一个函数","slug":"_3-1-使用一个函数","link":"#_3-1-使用一个函数","children":[{"level":4,"title":"3.1.1 random","slug":"_3-1-1-random","link":"#_3-1-1-random","children":[]},{"level":4,"title":"3.1.2 math","slug":"_3-1-2-math","link":"#_3-1-2-math","children":[]}]},{"level":3,"title":"3.2  定义一个函数","slug":"_3-2-定义一个函数","link":"#_3-2-定义一个函数","children":[]}]},{"level":2,"title":"4. 练习","slug":"_4-练习","link":"#_4-练习","children":[{"level":3,"title":"4.1文本倒转与过滤","slug":"_4-1文本倒转与过滤","link":"#_4-1文本倒转与过滤","children":[]},{"level":3,"title":"4.2 数字拆分与重组","slug":"_4-2-数字拆分与重组","link":"#_4-2-数字拆分与重组","children":[]},{"level":3,"title":"4.3 音节计数器","slug":"_4-3-音节计数器","link":"#_4-3-音节计数器","children":[]},{"level":3,"title":"4.4 简易计算器","slug":"_4-4-简易计算器","link":"#_4-4-简易计算器","children":[]}]}],"git":{"createdTime":1715748185000,"updatedTime":1716208312000,"contributors":[{"name":"Lxj679","email":"2944170474@qq.com","commits":11}]},"readingTime":{"minutes":5.5,"words":1650},"filePathRelative":"Notability/python/13.function.md","localizedDate":"2024年5月15日","excerpt":"<h2>1. 函数的定义</h2>\\n<p>计算机中的函数————代码片段</p>\\n<ul>\\n<li>一段具有特定功能的、可重复使用的代码</li>\\n<li>用函数名来表示并通过函数名来完成功能调用</li>\\n</ul>\\n<h2>2. 使用函数的意义</h2>\\n<ul>\\n<li>代码的重复利用</li>\\n<li>减少程序中的代码重复量，使代码更加容易被理解；</li>\\n<li>让代码更易于维护与更新</li>\\n</ul>\\n<h2>3. 函数的使用</h2>\\n<ol>\\n<li>内置函数：</li>\\n</ol>\\n<ul>\\n<li>Python 编程语言中已经被定好功能的函数</li>\\n<li>可以直接调用来执行特定的任务</li>\\n</ul>","autoDesc":true}');export{A as comp,P as data};
