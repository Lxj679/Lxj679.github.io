import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as e}from"./app-JpbkWFEM.js";const t={},p=e(`<h2 id="_1-数字型的特点" tabindex="-1"><a class="header-anchor" href="#_1-数字型的特点"><span>1. 数字型的特点</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span>
Out<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span>

In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span>
Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span>

In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1.0</span>
Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2.0</span>

In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2</span>
Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">4</span>

In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2.0</span>
Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">4.0</span>

In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">9</span> <span class="token operator">/</span> <span class="token number">3</span>
Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>::: tips</p><ul><li>如果其中有一个浮点数，结果就会得到浮点数（优先级最高）</li><li>除法涉及精度问题，所以最后的结果类型：就是浮点数</li></ul><p>:::</p><h2 id="_2-算术运算符" tabindex="-1"><a class="header-anchor" href="#_2-算术运算符"><span>2. 算术运算符</span></a></h2><p>算术运算符：用于算术计算。</p><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>+</code></td><td>加法运算符</td><td><code>1 + 1 = 2</code></td></tr><tr><td><code>-</code></td><td>减法运算符</td><td><code>2 – 1 = 1</code></td></tr><tr><td><code>*</code></td><td>乘法运算符</td><td><code>2 * 3 = 6</code></td></tr><tr><td><code>/</code></td><td>除法运算符</td><td><code>9 / 3 = 3.0</code></td></tr><tr><td><code>**</code></td><td>指数运算符</td><td><code>2 ** 3 = 8</code></td></tr><tr><td><code>%</code></td><td>取余运算符，计算余数</td><td><code>9 % 2 = 1</code></td></tr><tr><td><code>//</code></td><td>除法取整运算符，计算商并去除其小数部分</td><td><code>9 // 2 = 4</code></td></tr></tbody></table><p>::: tips</p><p>9 / 2 = 4……1</p><p>:::</p><h2 id="_3-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_3-小试牛刀"><span>3. 小试牛刀</span></a></h2><p>假设你有一个两位的整数，我们需要通过以下规则产生两个新的数字：</p><ul><li>第一个新数字是原数字的两位数中的各个数字的和；</li><li>第二个新数字是原数字的反转（如原数字为 21，反转后的数字为 12）。</li></ul><p>请你编写 Python 代码，实现以上要求。</p><p>输入：</p><p>一个整数 num （10 ≤ num ≤ 99）</p><p>输出：</p><p>两个整数，或者一个错误信息字符串。</p><p>示例： 假设输入的数字 num 为 91，那么你的代码应当输出两个数字：10（9和1的和）和19（91的反转）。</p><p>假设输入的数字 num 为 26，那么你的代码应当输出两个数字：8（2和6的和）和62（26的反转）。</p><p>假设输入的数字 num 为 18，那么你的代码应当输出两个数字：9（1和8的和）和81（18的反转）。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个十位数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 示例输入</span>
first_digits <span class="token operator">=</span> num <span class="token operator">//</span> <span class="token number">10</span> <span class="token comment"># 使用整除运算符（//）获取十位的数字</span>
second_digits <span class="token operator">=</span> num <span class="token operator">%</span> <span class="token number">10</span> <span class="token comment"># 使用取余运算符（%）获取个位的数字</span>

<span class="token comment"># 计算两个数字的和</span>
sum_of_digits <span class="token operator">=</span> first_digits <span class="token operator">+</span> second_digits <span class="token comment"># 将十位和个位数字相加</span>

<span class="token comment"># 反转数字</span>
reversed_number <span class="token operator">=</span> <span class="token punctuation">(</span>second_digits <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> first_digits <span class="token comment"># 将个位数字放到十位， 十位数字放到个位</span>

<span class="token comment"># 将计算结果保存在变量result中</span>
result <span class="token operator">=</span> <span class="token punctuation">(</span>sum_of_digits<span class="token punctuation">,</span> reversed_number<span class="token punctuation">)</span>

<span class="token comment"># 输出结果</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-比较运算符-比较值的大小" tabindex="-1"><a class="header-anchor" href="#_4-比较运算符-比较值的大小"><span>4. 比较运算符：比较值的大小</span></a></h2><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>&gt;</code></td><td>判断第一个运算对象是否大于第二个运算对象</td><td><code>print(1 &gt; 2)</code></td></tr><tr><td><code>&lt;</code></td><td>判断第一个运算对象是否小于第二个运算对象</td><td><code>print(1 &lt; 2)</code></td></tr><tr><td><code>&gt;=</code></td><td>判断第一个运算对象是否大于或等于第二个运算对象</td><td><code>print(3 &gt;= 3)</code></td></tr><tr><td><code>&lt;=</code></td><td>判断第一个运算对象是否小于或等于第二个运算对象</td><td><code>print(3 &lt;= 4)</code></td></tr><tr><td><code>==</code></td><td>判断两个运算对象是否相同</td><td><code>print(2 == 2)</code></td></tr><tr><td><code>!=</code></td><td>判断两个运算对象是否不相同</td><td><code>print(2 != 1)</code></td></tr></tbody></table><blockquote><p>试一试上面的例子，看看会输出什么结果？</p></blockquote><p>输出结果如下：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">2</span>  
Out<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">False</span>  
               
In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token number">2</span>  
Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>   
               
In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span> <span class="token operator">&gt;=</span> <span class="token number">3</span> 
Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>   
               
In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span> <span class="token operator">&lt;=</span> <span class="token number">4</span> 
Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>   
               
In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">2</span> 
Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>   
               
In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">1</span> 
Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-赋值运算符" tabindex="-1"><a class="header-anchor" href="#_5-赋值运算符"><span>5. 赋值运算符</span></a></h2><table><thead><tr><th>运算符</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td><code>=</code></td><td>把右侧的运算对象赋值给左侧的运算对象</td><td><code>a = 1</code></td></tr><tr><td><code>+=</code></td><td><code>a += b</code>等同于<code>a= a + b</code></td><td><code>a += 10</code></td></tr><tr><td><code>-=</code></td><td><code>a -= b</code>等同于<code>a = a - b</code></td><td><code>a -= 10</code></td></tr><tr><td><code>*=</code></td><td><code>a *= b</code>等同于<code>a = a * b</code></td><td><code>a *= 10</code></td></tr><tr><td><code>/=</code></td><td><code>a /= b</code>等同于<code>a= a / b</code></td><td><code>a /= 10</code></td></tr><tr><td><code>**=</code></td><td><code>a **= b</code> 等同于<code>a = a ** b</code></td><td><code>a **= 10</code></td></tr><tr><td><code>//=</code></td><td><code>a //= b</code>等同于<code>a = a // b</code></td><td><code>a //= 10</code></td></tr></tbody></table><p>:::tabs-code</p><p>@tab 代码示例</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 赋值运算符形式</span>
a <span class="token operator">=</span> <span class="token number">1</span>
a <span class="token operator">+=</span> <span class="token number">10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token number">11</span>

<span class="token comment"># 常规形式</span>
a <span class="token operator">=</span> <span class="token number">1</span>
a <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token number">11</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@tab 例子</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
a <span class="token operator">+=</span> <span class="token number">10</span>
a <span class="token operator">-=</span> <span class="token number">10</span>
a <span class="token operator">*=</span> <span class="token number">10</span>
a <span class="token operator">/=</span> <span class="token number">10</span> <span class="token comment"># 除法涉及精度问题，所以最后的结果类型：就是浮点数</span>
a <span class="token operator">**=</span> <span class="token number">10</span>
a <span class="token operator">//=</span> <span class="token number">10</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token number">0.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><h2 id="_6-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_6-小试牛刀"><span>6. 小试牛刀</span></a></h2><p>下面程序输出什么结果？</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">4.5</span>
y <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x <span class="token operator">//</span> y<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>::: tips</p><p>浮点数优先级高，计算中只要出现了浮点数，那么最终结果必然是浮点数。</p><p>:::</p><p>![ipython的计算结果(./3.Numeric-type.assets/image-20240329144757144.png)</p><h2 id="_7-练习" tabindex="-1"><a class="header-anchor" href="#_7-练习"><span>7. 练习</span></a></h2><h3 id="_7-1-选择题" tabindex="-1"><a class="header-anchor" href="#_7-1-选择题"><span>7.1 选择题</span></a></h3><ol><li><p>在 Python 中，执行 <code>3.5 + 4</code> 的结果是什么类型？</p><p>A. 整数</p><p>B. 浮点数</p><p>C. 字符串</p><p>D. 布尔值</p></li><li><p>以下哪个运算符用于取余？</p><p>A. <code>+</code></p><p>B. <code>-</code></p><p>C. <code>*</code></p><p>D. <code>%</code></p></li><li><p>在 Python 中，执行 <code>9 // 2</code> 的结果是多少？</p><p>A. 4.5</p><p>B. 4</p><p>C. 5</p><p>D. 4.0</p></li><li><p><code>1.0 == 1</code> 在 Python 中的结果是什么？</p><p>A. True</p><p>B. False</p><p>C. 报错</p><p>D. 无法确定</p></li><li><p><code>2 + 3 * 4</code> 的结果是多少？</p><p>A. 20</p><p>B. 14</p><p>C. 24</p><p>D. 12</p></li><li><p>在 Python 中，<code>10 / 3</code> 的结果是什么？</p><p>A. 3</p><p>B. 3.3333</p><p>C. 4</p><p>D. 3.3</p></li><li><p>执行 <code>7 // 2</code> 的结果是多少？</p><p>A. 3</p><p>B. 3.5</p><p>C. 4</p><p>D. 2</p></li><li><p>在 Python 中，以下哪个操作会返回浮点数？</p><p>A. <code>2 * 3</code></p><p>B. <code>4 + 2</code></p><p>C. <code>9 / 2</code></p><p>D. <code>5 // 2</code></p></li><li><p><code>4 ** 0.5</code> 的结果是多少？</p><p>A. 2</p><p>B. 4</p><p>C. 16</p><p>D. 0.5</p><p>E. 2.0</p></li><li><p>执行 <code>3 &gt;= 3</code> 的结果是什么？</p><p>A. True</p><p>B. False</p><p>C. 报错</p><p>D. 无法确定</p></li><li><p>执行 <code>4 != 4</code> 的结果是什么？</p><p>A. True</p><p>B. False</p><p>C. 报错</p><p>D. 无法确定</p></li><li><p>在 Python 中，<code>5 + 2 * 3</code> 的结果是什么？</p><p>A. 21</p><p>B. 11</p><p>C. 14</p><p>D. 7</p></li><li><p>执行 <code>6 / 2</code> 的结果是什么类型？</p><p>A. 整数</p><p>B. 浮点数</p><p>C. 字符串</p><p>D. 布尔值</p></li></ol><h3 id="_7-2-填空" tabindex="-1"><a class="header-anchor" href="#_7-2-填空"><span>7.2 填空</span></a></h3><ol><li>在 Python 中，执行 <code>2 ** 3</code> 的结果是 <code>______</code>。</li><li>执行表达式 <code>9 % 4</code> 会得到 <code>______</code> 作为结果。</li><li>如果 <code>a = 5</code>，那么执行 <code>a *= 2</code> 之后，<code>a</code> 的值是 <code>______</code>。</li><li>在 Python 中，<code>3 == 2.9999</code> 的结果是 <code>______</code>。</li><li>执行 <code>5 &lt;= 5</code> 的结果是 <code>______</code>。</li><li>如果 <code>b = 3</code>，执行 <code>b /= 2</code> 后，<code>b</code> 的值是 <code>______</code>。</li><li>执行 <code>4 % 3</code> 的结果是 <code>______</code>。</li><li>如果 <code>c = 10</code>，执行 <code>c //= 3</code> 后，<code>c</code> 的值是 <code>______</code>。</li><li>在 Python 中，<code>7 == 7.0</code> 的结果是 <code>______</code>。</li><li>执行 <code>8 / 2</code> 的结果是 <code>______</code>。</li></ol><h3 id="_7-3-编程题" tabindex="-1"><a class="header-anchor" href="#_7-3-编程题"><span>7.3 编程题</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>测试部分代码，没有任何输出没有报错，则视为作答正确。</p><p>但是要编写符合题目要求的输出。</p></div><h4 id="_7-3-1-数字和与差" tabindex="-1"><a class="header-anchor" href="#_7-3-1-数字和与差"><span>7.3.1 数字和与差：</span></a></h4><p>编写一段 Python 代码，创建两个数字 <code>a</code> 和 <code>b</code>，计算并打印出它们的和以及 <code>a</code> 减去 <code>b</code> 的结果。</p><p><strong>代码模版</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">##</span>
<span class="token comment">## your code here</span>
<span class="token comment">##</span>


<span class="token comment"># 测试</span>
<span class="token keyword">assert</span> sum_result <span class="token operator">==</span> a <span class="token operator">+</span> b
<span class="token keyword">assert</span> difference <span class="token operator">==</span> a <span class="token operator">-</span> b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>Sum<span class="token punctuation">:</span> <span class="token number">8</span>
Difference<span class="token punctuation">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-3-2-数字的乘法和除法" tabindex="-1"><a class="header-anchor" href="#_7-3-2-数字的乘法和除法"><span>7.3.2 数字的乘法和除法</span></a></h4><p>编写一段 Python 代码，创建两个数字 <code>x</code> 和 <code>y</code>，计算并打印出它们的乘积和除法结果。</p><p><strong>代码模版</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">##</span>
<span class="token comment">## your code here</span>
<span class="token comment">##</span>


<span class="token comment"># 测试</span>
<span class="token keyword">assert</span> product <span class="token operator">==</span> x <span class="token operator">*</span> y
<span class="token keyword">assert</span> division <span class="token operator">==</span> x <span class="token operator">/</span> y
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>Product<span class="token punctuation">:</span> <span class="token number">12</span>
Division<span class="token punctuation">:</span> <span class="token number">3.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-3-3-求余和幂运算" tabindex="-1"><a class="header-anchor" href="#_7-3-3-求余和幂运算"><span>7.3.3 求余和幂运算</span></a></h4><p>编写一段 Python 代码，创建两个数字 <code>m</code> 和 <code>n</code>，计算并打印出 <code>m</code> 对 <code>n</code> 取余的结果和 <code>m</code> 的 <code>n</code> 次幂。</p><p><strong>代码模版</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">##</span>
<span class="token comment">## your code here</span>
<span class="token comment">##</span>


<span class="token comment"># 测试</span>
<span class="token keyword">assert</span> remainder <span class="token operator">==</span> m <span class="token operator">%</span> n
<span class="token keyword">assert</span> power <span class="token operator">==</span> m <span class="token operator">**</span> n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>Remainder<span class="token punctuation">:</span> <span class="token number">1</span>
Power<span class="token punctuation">:</span> <span class="token number">81</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-3-4-比较运算" tabindex="-1"><a class="header-anchor" href="#_7-3-4-比较运算"><span>7.3.4 比较运算</span></a></h4><p>编写一段 Python 代码，输入两个数字 <code>p</code> 和 <code>q</code>，比较它们的大小并打印出相应的比较结果（大于、小于、等于）。</p><p><strong>代码模版</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">##</span>
<span class="token comment">## your code here</span>
<span class="token comment">##</span>

<span class="token keyword">if</span> ______<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>p<span class="token punctuation">}</span></span><span class="token string"> is greater than </span><span class="token interpolation"><span class="token punctuation">{</span>q<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> p <span class="token operator">&gt;</span> q
<span class="token keyword">elif</span> ______<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>p<span class="token punctuation">}</span></span><span class="token string"> is less than </span><span class="token interpolation"><span class="token punctuation">{</span>q<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> p <span class="token operator">&lt;</span> q
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>p<span class="token punctuation">}</span></span><span class="token string"> is equal to </span><span class="token interpolation"><span class="token punctuation">{</span>q<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> p <span class="token operator">==</span> q

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">4</span> <span class="token keyword">is</span> less than <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,74),o=[p];function c(l,i){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","3.Numeric-type.html.vue"]]),k=JSON.parse('{"path":"/Notability/python/3.Numeric-type.html","title":"3. Numeric type","lang":"zh-CN","frontmatter":{"title":"3. Numeric type","date":"2024-03-28T14:09:15.000Z","isOriginal":true,"category":["python"],"tag":["python","编程","教程"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 数字型的特点 ::: tips 如果其中有一个浮点数，结果就会得到浮点数（优先级最高） 除法涉及精度问题，所以最后的结果类型：就是浮点数 ::: 2. 算术运算符 算术运算符：用于算术计算。 ::: tips 9 / 2 = 4……1 ::: 3. 小试牛刀 假设你有一个两位的整数，我们需要通过以下规则产生两个新的数字： 第一个新数字是原数字的两...","head":[["meta",{"property":"og:url","content":"https://dailyrecord4ryan.com/Notability/python/3.Numeric-type.html"}],["meta",{"property":"og:site_name","content":"Website of Ryan"}],["meta",{"property":"og:title","content":"3. Numeric type"}],["meta",{"property":"og:description","content":"1. 数字型的特点 ::: tips 如果其中有一个浮点数，结果就会得到浮点数（优先级最高） 除法涉及精度问题，所以最后的结果类型：就是浮点数 ::: 2. 算术运算符 算术运算符：用于算术计算。 ::: tips 9 / 2 = 4……1 ::: 3. 小试牛刀 假设你有一个两位的整数，我们需要通过以下规则产生两个新的数字： 第一个新数字是原数字的两..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-18T10:35:29.000Z"}],["meta",{"property":"article:author","content":"Ryan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-03-28T14:09:15.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-18T10:35:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3. Numeric type\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-28T14:09:15.000Z\\",\\"dateModified\\":\\"2024-04-18T10:35:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan\\",\\"url\\":\\"https://dailyrecord4ryan.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 数字型的特点","slug":"_1-数字型的特点","link":"#_1-数字型的特点","children":[]},{"level":2,"title":"2. 算术运算符","slug":"_2-算术运算符","link":"#_2-算术运算符","children":[]},{"level":2,"title":"3. 小试牛刀","slug":"_3-小试牛刀","link":"#_3-小试牛刀","children":[]},{"level":2,"title":"4. 比较运算符：比较值的大小","slug":"_4-比较运算符-比较值的大小","link":"#_4-比较运算符-比较值的大小","children":[]},{"level":2,"title":"5. 赋值运算符","slug":"_5-赋值运算符","link":"#_5-赋值运算符","children":[]},{"level":2,"title":"6. 小试牛刀","slug":"_6-小试牛刀","link":"#_6-小试牛刀","children":[]},{"level":2,"title":"7. 练习","slug":"_7-练习","link":"#_7-练习","children":[{"level":3,"title":"7.1 选择题","slug":"_7-1-选择题","link":"#_7-1-选择题","children":[]},{"level":3,"title":"7.2 填空","slug":"_7-2-填空","link":"#_7-2-填空","children":[]},{"level":3,"title":"7.3 编程题","slug":"_7-3-编程题","link":"#_7-3-编程题","children":[{"level":4,"title":"7.3.1 数字和与差：","slug":"_7-3-1-数字和与差","link":"#_7-3-1-数字和与差","children":[]},{"level":4,"title":"7.3.2 数字的乘法和除法","slug":"_7-3-2-数字的乘法和除法","link":"#_7-3-2-数字的乘法和除法","children":[]},{"level":4,"title":"7.3.3 求余和幂运算","slug":"_7-3-3-求余和幂运算","link":"#_7-3-3-求余和幂运算","children":[]},{"level":4,"title":"7.3.4 比较运算","slug":"_7-3-4-比较运算","link":"#_7-3-4-比较运算","children":[]}]}]}],"git":{"createdTime":1711613346000,"updatedTime":1713436529000,"contributors":[{"name":"Lxj679","email":"2944170474@qq.com","commits":8}]},"readingTime":{"minutes":6.19,"words":1856},"filePathRelative":"Notability/python/3.Numeric-type.md","localizedDate":"2024年3月28日","excerpt":"<h2>1. 数字型的特点</h2>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code>In <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span>\\nOut<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">2</span>\\n\\nIn <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span>\\nOut<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1</span>\\n\\nIn <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1.0</span>\\nOut<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">2.0</span>\\n\\nIn <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">2</span>\\nOut<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">4</span>\\n\\nIn <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">2.0</span>\\nOut<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">5</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">4.0</span>\\n\\nIn <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">9</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">3</span>\\nOut<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">6</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">:</span> <span class=\\"token number\\">3.0</span>\\n</code></pre></div>","autoDesc":true}');export{u as comp,k as data};
