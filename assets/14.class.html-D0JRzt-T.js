import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-BIhyyJd-.js";const e={},p=t(`<h2 id="_1-类的定义" tabindex="-1"><a class="header-anchor" href="#_1-类的定义"><span>1. 类的定义</span></a></h2><p>将程序任务涉及到的事物抽象为一个个的对象以这些对象为中心来写程序</p><p><strong>类、实例 封装、继承、多态</strong></p><ul><li>什么是类，什么是实例？</li></ul><p>​ 狗是某一类动物，他们具有相同、相似的属性 ​ 我家有一只狗，叫旺财 ​ 你家有一只狗，叫大黄 ​ 他们都有四条腿，一条尾巴 ​ 旺财和大黄被生出来后，互相不会影响旺财吃胖了，体重增加了不会影响大黄 ​ 如果某一天上帝决定给狗这个种类的生物都增加一条尾巴那么旺财和大黄会同时变成两条尾巴</p><p>​ 其中：</p><p>​ 狗——<strong>类</strong></p><p>​ 旺财——<strong>狗这个类的实例</strong></p><p>​ 大黄——<strong>狗这个类的实例</strong></p><p>​ 如果某一天上帝决定给狗这个种类的生物都增加一条尾巴那么旺财和大黄会同时变成两条尾巴——<strong>修改类会影响所有的实例</strong></p><p>​ 旺财和大黄被生出来后，互相不会影响旺财吃胖了，体重增加了不会影响大黄——<strong>修改某个实例里的属性不会影响其他类</strong></p><ul><li>一个例子：现在的方法</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dog_x <span class="token operator">=</span> <span class="token number">0</span>
cat_x <span class="token operator">=</span> <span class="token number">0</span>
elephant_x <span class="token operator">=</span> <span class="token number">0</span>
snake_x <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">def</span> <span class="token function">dog_move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> dog_x
    dog_x <span class="token operator">+=</span> <span class="token number">10</span>

<span class="token keyword">def</span> <span class="token function">cat_move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> cat_x
    cat_x <span class="token operator">+=</span> <span class="token number">10</span>

<span class="token keyword">def</span> <span class="token function">elephant_move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> elephant_x
    elephant_x <span class="token operator">+=</span> <span class="token number">10</span>
    
<span class="token keyword">def</span>  <span class="token function">snake_move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    
	<span class="token keyword">global</span> snake_x
    snake_x <span class="token operator">+=</span> <span class="token number">10</span>
    
    
user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> user_input <span class="token operator">==</span> <span class="token string">&#39;move&#39;</span><span class="token punctuation">:</span>
    dog_move<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cat_move<span class="token punctuation">(</span><span class="token punctuation">)</span>
    elephant_move<span class="token punctuation">(</span><span class="token punctuation">)</span>
    snake_move<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它们都是高度相似的，那我们是不是可以帮它们归为一类呢？</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span>

    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token number">10</span>

dog <span class="token operator">=</span> Animal<span class="token punctuation">(</span><span class="token punctuation">)</span>
cat <span class="token operator">=</span> Animal<span class="token punctuation">(</span><span class="token punctuation">)</span>

user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> user_input <span class="token operator">==</span> <span class="token string">&#39;move&#39;</span><span class="token punctuation">:</span>
    dog<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cat<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Dog positions:&#39;</span><span class="token punctuation">,</span> dog<span class="token punctuation">.</span>x<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Cat positions:&#39;</span><span class="token punctuation">,</span> cat<span class="token punctuation">.</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[p];function i(l,c){return s(),a("div",null,o)}const d=n(e,[["render",i],["__file","14.class.html.vue"]]),k=JSON.parse('{"path":"/Notability/python/14.class.html","title":"14. class","lang":"zh-CN","frontmatter":{"title":"14. class","date":"2024-05-21T12:10:58.000Z","isOriginal":true,"category":["python"],"tag":["python","编程","教程"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 类的定义 将程序任务涉及到的事物抽象为一个个的对象以这些对象为中心来写程序 类、实例 封装、继承、多态 什么是类，什么是实例？ ​ 狗是某一类动物，他们具有相同、相似的属性 ​ 我家有一只狗，叫旺财 ​ 你家有一只狗，叫大黄 ​ 他们都有四条腿，一条尾巴 ​ 旺财和大黄被生出来后，互相不会影响旺财吃胖了，体重增加了不会影响大黄 ​ 如果某一天上帝...","head":[["meta",{"property":"og:url","content":"https://dailyrecord4ryan.com/Notability/python/14.class.html"}],["meta",{"property":"og:site_name","content":"Website of Ryan"}],["meta",{"property":"og:title","content":"14. class"}],["meta",{"property":"og:description","content":"1. 类的定义 将程序任务涉及到的事物抽象为一个个的对象以这些对象为中心来写程序 类、实例 封装、继承、多态 什么是类，什么是实例？ ​ 狗是某一类动物，他们具有相同、相似的属性 ​ 我家有一只狗，叫旺财 ​ 你家有一只狗，叫大黄 ​ 他们都有四条腿，一条尾巴 ​ 旺财和大黄被生出来后，互相不会影响旺财吃胖了，体重增加了不会影响大黄 ​ 如果某一天上帝..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-21T04:43:58.000Z"}],["meta",{"property":"article:author","content":"Ryan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-05-21T12:10:58.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-21T04:43:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"14. class\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-21T12:10:58.000Z\\",\\"dateModified\\":\\"2024-05-21T04:43:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan\\",\\"url\\":\\"https://dailyrecord4ryan.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 类的定义","slug":"_1-类的定义","link":"#_1-类的定义","children":[]}],"git":{"createdTime":1716265165000,"updatedTime":1716266638000,"contributors":[{"name":"Lxj679","email":"2944170474@qq.com","commits":2}]},"readingTime":{"minutes":1.51,"words":454},"filePathRelative":"Notability/python/14.class.md","localizedDate":"2024年5月21日","excerpt":"<h2>1. 类的定义</h2>\\n<p>将程序任务涉及到的事物抽象为一个个的对象以这些对象为中心来写程序</p>\\n<p><strong>类、实例            封装、继承、多态</strong></p>\\n<ul>\\n<li>什么是类，什么是实例？</li>\\n</ul>\\n<p>​\\t狗是某一类动物，他们具有相同、相似的属性\\n​\\t我家有一只狗，叫旺财\\n​\\t你家有一只狗，叫大黄\\n​\\t他们都有四条腿，一条尾巴\\n​\\t旺财和大黄被生出来后，互相不会影响旺财吃胖了，体重增加了不会影响大黄\\n​\\t如果某一天上帝决定给狗这个种类的生物都增加一条尾巴那么旺财和大黄会同时变成两条尾巴</p>\\n<p>​\\t其中：</p>","autoDesc":true}');export{d as comp,k as data};
