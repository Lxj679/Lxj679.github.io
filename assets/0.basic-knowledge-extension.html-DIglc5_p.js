import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-BeL5txgj.js";const p="/assets/b0d64ef3132b812987b53452acc1f87-va11uNag.png",e="/assets/image-20240418185318870-D8VRqau6.png",o={},l=t('<h1 id="basic-knowledge-extension-for-python" tabindex="-1"><a class="header-anchor" href="#basic-knowledge-extension-for-python"><span>basic knowledge extension for Python</span></a></h1><p><strong>引言： 这篇文章旨在为 Ryan 本人服务</strong></p><h2 id="_1-基本语法元素" tabindex="-1"><a class="header-anchor" href="#_1-基本语法元素"><span>1. 基本语法元素</span></a></h2><h3 id="_1-1-格式化输出" tabindex="-1"><a class="header-anchor" href="#_1-1-格式化输出"><span>1.1 格式化输出</span></a></h3><img src="'+p+`" alt="format的格式" style="zoom:33%;"><ol><li><strong>填充输出</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 右对齐</span>
a <span class="token operator">=</span> <span class="token number">123</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:_&gt;4}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># _123</span>
b <span class="token operator">=</span> <span class="token number">1111</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:&amp;&gt;10}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &amp;&amp;&amp;&amp;&amp;&amp;1111</span>
<span class="token comment"># 左对齐</span>
a <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:*&lt;5}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># a****</span>
<span class="token comment"># 居中</span>
a <span class="token operator">=</span> <span class="token string">&#39;middle&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:#^16}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># #####middle#####</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:#^15}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># ####middle#####</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:#^17}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># #####middle######</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>数字千分位分隔符</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 显示1,000,000</span>
a <span class="token operator">=</span> <span class="token number">1000000</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:,}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1,000,000</span>

<span class="token comment"># 填充优先级高于千分位</span>
a <span class="token operator">=</span> <span class="token number">1000000</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:*&gt;20,}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># ***********1,000,000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>浮点数简化输出</strong></li></ol><ul><li>留两位小数</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">3.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.2f}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 3.14</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>按百分数输出</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">3.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:%}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 314.159260%</span>


a <span class="token operator">=</span> <span class="token number">3.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.1%}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 314.2%</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>科学计数法输出</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">0.1415926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:e}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1.415926e-01</span>


a <span class="token operator">=</span> <span class="token number">0.0000926</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;{0:.2e}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 9.26e-05</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>整数的进制转换输出</strong></li></ol><ul><li>十进制整数转二进制、unicode码、十进制、八进制、十六进制输出</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;二进制{0:b}, Unicode码{0:c}, 十进制{0:d}, 八进制{0:o}, 十六进制{0:x}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">450</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output: 二进制111000010, Unicode码ǂ, 十进制450, 八进制702, 十六进制1c2 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-程序格式" tabindex="-1"><a class="header-anchor" href="#_1-2-程序格式"><span>1.2 程序格式</span></a></h3><h4 id="_1-最大行长度" tabindex="-1"><a class="header-anchor" href="#_1-最大行长度"><span>1. 最大行长度</span></a></h4><p>所有行限制的最大字符数为 79</p><h4 id="_2-缩进" tabindex="-1"><a class="header-anchor" href="#_2-缩进"><span>2. 缩进</span></a></h4><ul><li>用缩进来表示语句间的逻辑</li><li>在 for while if def class等:之后下一行开始进行缩进，表明后续代码与前句之间的从属关系</li><li>缩进量:4字符</li></ul><h4 id="_3-使用空格" tabindex="-1"><a class="header-anchor" href="#_3-使用空格"><span>3.使用空格</span></a></h4><ul><li>二元运算符两边加一个加空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">2</span>
x <span class="token operator">+=</span> <span class="token number">4</span>
<span class="token number">6</span> <span class="token operator">&gt;</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用不同优先级的运算符，考虑在最低优先级的运算符周围添加空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> x<span class="token operator">*</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span>
z <span class="token operator">=</span> x<span class="token operator">*</span><span class="token number">2</span> <span class="token operator">+</span> y<span class="token operator">*</span>y
c <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token operator">-</span>b<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在逗号后使用空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>
ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>不要使用一个以上的空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span>             <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_4-避免使用空格" tabindex="-1"><a class="header-anchor" href="#_4-避免使用空格"><span>4. 避免使用空格</span></a></h4><ul><li>在指定关键字参数或者默认参数值的时候，不要在 = 附近加上空格</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">fun</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> m<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    pritn<span class="token punctuation">(</span>n<span class="token punctuation">,</span> m<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结：</span></a></h4><ol><li><strong>以上属于PEP8格式指南的部分内容，养成良好的编码规范利人利己</strong></li><li><strong>格式约定的目的:</strong><ol><li>使大量Python代码风格一致</li><li>提升代码可读性</li></ol></li><li><strong>尽信书不如无书，不应死板教条的执行格式规范</strong><ol><li>项目规范优先</li></ol></li></ol><h2 id="_2-基本数据类型" tabindex="-1"><a class="header-anchor" href="#_2-基本数据类型"><span>2. 基本数据类型</span></a></h2><h3 id="_2-1-数字型" tabindex="-1"><a class="header-anchor" href="#_2-1-数字型"><span>2.1 数字型</span></a></h3><h4 id="_2-1-1-整数————不同进制的转换" tabindex="-1"><a class="header-anchor" href="#_2-1-1-整数————不同进制的转换"><span>2.1.1. 整数————不同进制的转换</span></a></h4><p>默认输入：十进制</p><p>二进制：<code>0b</code></p><p>八进制：<code>0o</code></p><p>十六进制：<code>0x</code></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">16</span> <span class="token operator">==</span> <span class="token number">0b10000</span> <span class="token operator">==</span> <span class="token number">0o20</span> <span class="token operator">==</span> <span class="token number">0x10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>十进制与其他进制的转换</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment"># 2</span>
b <span class="token operator">=</span> <span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment"># 8</span>
c <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment"># 16</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">0b10000</span> <span class="token number">0o20</span> <span class="token number">0x10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>转换后的结果会变为字符串（str）类型</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><ul><li>其他进制转换为十进制</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>

d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 二进制转十进制</span>
e <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment"># 八进制转十进制</span>
f <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment"># 十六进制转十进制</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> e<span class="token punctuation">,</span> f<span class="token punctuation">)</span> 

<span class="token comment"># output</span>
<span class="token number">16</span> <span class="token number">16</span> <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-2-浮点数" tabindex="-1"><a class="header-anchor" href="#_2-1-2-浮点数"><span>2.1.2. 浮点数</span></a></h4><ul><li><ul><li><ul><li>不确定小数问题**</li></ul></li></ul></li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>print((0.1 + 0.2) == 0.3) # False
print(0.1 + 0.2) # 0.30000000000000004
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>产生该问题的原因：</strong></li></ul><p>浮点数小数部分在计算机是由二进制表示的，二进制小数不能表示所有的十进制小数</p><img src="`+e+`" alt="二进制和十进制实际数值" style="zoom:50%;"><ul><li><strong>通常情况下不会影响精度</strong></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.7</span><span class="token punctuation">)</span> <span class="token comment"># 0.7999999999999999</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><strong>如何求得真正想表达的十进制：————四舍五入(<code>.round()</code>)</strong></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">0.1</span>
b <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 0.30000000000000004</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># 0.3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0.3</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-3-虚数" tabindex="-1"><a class="header-anchor" href="#_2-1-3-虚数"><span>2.1.3. *虚数</span></a></h4><ul><li>格式：<code>a + bj</code> 或 <code>a + bJ</code></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">4j</span>
b <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">5J</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">4j</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">5j</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>若虚部数值为 1， 也要写成 1j</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> j
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\basic_knowledge_extension\\Data_type\\imaginary_number.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> j
NameError<span class="token punctuation">:</span> name <span class="token string">&#39;j&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="_2-1-4-数字型的函数" tabindex="-1"><a class="header-anchor" href="#_2-1-4-数字型的函数"><span>2.1.4. 数字型的函数</span></a></h4><ul><li>绝对值 abs()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">4j</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 对复数a+bj 执行的是求模运算(a^2+b^2)^0.5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>幂次方 pow()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 32</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 等价于 (2^5) % 3 = 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>四舍五入 round</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1.618</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 默认状态下四舍五入保留零位小数</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 保留两位小数</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 位数不足时， 无需不起！！！！！！</span>

<span class="token comment"># output</span>
<span class="token number">2</span>
<span class="token number">1.62</span>
<span class="token number">1.618</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>整除返回商和模 divmod()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token builtin">divmod</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment"># 整除数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment"># 余数</span>

<span class="token comment"># output</span>
<span class="token number">3</span>
<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>最大/小值 max()/min()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">333</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">222</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token number">111</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">3</span>

In <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
NameError                                 Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
Cell In<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> line <span class="token number">1</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token builtin">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>

NameError<span class="token punctuation">:</span> name <span class="token string">&#39;a&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined

In <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span>a<span class="token punctuation">)</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
NameError                                 Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span>
Cell In<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> line <span class="token number">1</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token builtin">max</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span>a<span class="token punctuation">)</span>

NameError<span class="token punctuation">:</span> name <span class="token string">&#39;A&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>求和 sum()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ul><li>科学计算库 math、numpy、scipy</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math <span class="token comment"># 导入库</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 指数运算</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>log2<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 对数运算</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 开平方运算</span>

<span class="token comment"># output</span>
<span class="token number">2.718281828459045</span>
<span class="token number">1.0</span>
<span class="token number">2.0</span>

<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 求平均值</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>median<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 求中位数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 求标准差</span>

<span class="token comment"># output</span>
<span class="token number">3.0</span>
<span class="token number">3.0</span>
<span class="token number">1.4142135623730951</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-字符串" tabindex="-1"><a class="header-anchor" href="#_2-2-字符串"><span>2.2 字符串</span></a></h3><h4 id="_2-2-1-字符串的成倍复制" tabindex="-1"><a class="header-anchor" href="#_2-2-1-字符串的成倍复制"><span>2.2.1 字符串的成倍复制</span></a></h4><p>Str * n 或 n * Str</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token string">&#39;----21&#39;</span>
b <span class="token operator">=</span> <span class="token string">&#39;can you do something for me----&#39;</span>
c <span class="token operator">=</span> a <span class="token operator">+</span> b
<span class="token keyword">print</span><span class="token punctuation">(</span>c <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> c<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>


<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>21can you do something <span class="token keyword">for</span> me<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-2-判断子集是否在字符串内-in" tabindex="-1"><a class="header-anchor" href="#_2-2-2-判断子集是否在字符串内-in"><span>2.2.2 判断子集是否在字符串内 in</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>Str <span class="token operator">=</span> <span class="token string">&#39;hello, my name is ryan.&#39;</span>
str1 <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
str2 <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str1 <span class="token keyword">in</span> Str<span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str2 <span class="token keyword">in</span> Str<span class="token punctuation">)</span> <span class="token comment"># False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-3-字符编码" tabindex="-1"><a class="header-anchor" href="#_2-2-3-字符编码"><span>2.2.3 字符编码</span></a></h4><p>将中文字库，英文字母、数字、特殊字符等转化成计算机可识别的二进制数</p><p>::: tips</p><ol><li>Python 中使用的是 Unicode 编码</li><li>每个单一字符对应一个唯一的互不重复的二进制编码</li></ol><p>:::</p><ol><li>将字符转化为 Unicode 码 ord()</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;你&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;坏&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">49</span>
<span class="token number">50</span>
<span class="token number">97</span>
<span class="token number">20320</span>
<span class="token number">22351</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>将 Unicode 码转化为字符 chr()</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">1010</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">12345</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">23456</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
ϲ
✐
〹
宠
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-布尔型" tabindex="-1"><a class="header-anchor" href="#_2-3-布尔型"><span>2.3 布尔型</span></a></h3><h4 id="_2-3-1-判断是否全为真-假-any-和-all" tabindex="-1"><a class="header-anchor" href="#_2-3-1-判断是否全为真-假-any-和-all"><span>2.3.1 判断是否全为真/假 <code>any()</code> 和 <code>all()</code></span></a></h4><h2 id="_3-组合数据类型" tabindex="-1"><a class="header-anchor" href="#_3-组合数据类型"><span>3. 组合数据类型</span></a></h2><h3 id="_3-1-列表" tabindex="-1"><a class="header-anchor" href="#_3-1-列表"><span>3.1 列表</span></a></h3><h4 id="range" tabindex="-1"><a class="header-anchor" href="#range"><span>range()</span></a></h4><p>range(起始数字,结束数字（不包含）,步长)</p><ol><li>必须包含终止位置</li><li>默认起始数字是 0</li><li>默认步长是 1</li></ol><ul><li>range() 就这两种写法：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">0</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token number">4</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>range() 转其他数据类型</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lst1 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
lst2 <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
lst3 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
lst4 <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 不可以</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>lst1<span class="token punctuation">,</span> lst2<span class="token punctuation">,</span> lst3<span class="token punctuation">,</span> lst4<span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-元组" tabindex="-1"><a class="header-anchor" href="#_3-2-元组"><span>3.2 元组</span></a></h3><ol><li><p>zip</p></li><li><p>返回值不止一个的函数，默认返回一个元组</p></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
a <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
a<span class="token punctuation">,</span> b <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\basic_knowledge_extension\\Combination_type\\List.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">45</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    a<span class="token punctuation">,</span> b <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
ValueError<span class="token punctuation">:</span> too many values to unpack <span class="token punctuation">(</span>expected <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">4</span> <span class="token number">8</span> <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-3-字典" tabindex="-1"><a class="header-anchor" href="#_3-3-字典"><span>3.3 字典</span></a></h4><p>一些常用于列表（list）中的操作的括号中的元素位置一般在字典中用字典键取代，如：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># a</span>

dict1<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;d&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> <span class="token comment"># {11: &#39;a&#39;, 22: &#39;b&#39;, 33: &#39;c&#39;, 44: &#39;d&#39;}</span>

<span class="token keyword">del</span> dict1<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> <span class="token comment"># {11: &#39;a&#39;, 22: &#39;b&#39;, 33: &#39;c&#39;}</span>

dict1<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> <span class="token comment"># {11: &#39;a&#39;, 22: &#39;b&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>特殊的：</p><ol><li><code>key(), value(), items()</code></li></ol><p>不加 <code>list() </code>默认状态下，返回的东西很奇怪！</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
key <span class="token operator">=</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
value <span class="token operator">=</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>
item <span class="token operator">=</span> dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> item<span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># output</span>
dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
dict_values<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
dict_items<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


keys <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
values <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
items <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>dict1<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> values<span class="token punctuation">,</span> items<span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><code>in()</code></li></ol><p>即可以判断 key 也可以判断 value———— dict 不加 .value() 或 .key() 默认判断 key 值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">in</span> dict1<span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span> <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>popitem()</code></li></ol><p>随机删除字典中的一对键与键值，一个返回变量返回元组，两个分别返回键和键值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">:</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>
key_and_value <span class="token operator">=</span> dict1<span class="token punctuation">.</span>popitem<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>key_and_value<span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> 

key<span class="token punctuation">,</span> value <span class="token operator">=</span> dict1<span class="token punctuation">.</span>popitem<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token number">33</span>
c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><code>get()</code></li></ol><p>value = get()</p><p>用于输入一个 key，返回其在字典内的 value，没有该 key 则返回默认值 none 或 设置的值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token comment"># a</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token comment"># None</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>get<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;wtf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># a</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>get<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&#39;wtf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># wtf</span>

value1 <span class="token operator">=</span> dict1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>value1<span class="token punctuation">)</span> <span class="token comment"># a</span>

value2 <span class="token operator">=</span> dict1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;wtf&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>value2<span class="token punctuation">)</span> <span class="token comment"># a</span>

value3 <span class="token operator">=</span> dict1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>value3<span class="token punctuation">)</span> <span class="token comment"># None</span>

value4 <span class="token operator">=</span> dict1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token string">&#39;wtf&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>value4<span class="token punctuation">)</span> <span class="token comment"># wtf</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>clear()</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">:</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>
dict1<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> <span class="token comment"># {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>del 和 clear 的区别在于：</p><p>del dict 直接把字典 dict 删除 ，运行结果会报错</p><p>而 clear 是清空字典</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">:</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>
dict1<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span> 
<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span>


dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">:</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">:</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">:</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">del</span> dict1
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>
<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\basic_knowledge_extension\\Data_type\\dict.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">70</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>
NameError<span class="token punctuation">:</span> name <span class="token string">&#39;dict1&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><ul><li>字典的嵌套使用：</li></ul><ol><li><p>列表嵌套字典</p></li><li><p>字典嵌套字典</p></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>class1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;mike&#39;</span><span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">&#39;grade&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>class1<span class="token punctuation">[</span><span class="token string">&#39;tom&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>class1<span class="token punctuation">[</span><span class="token string">&#39;mike&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;grade&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">7</span>
<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-集合" tabindex="-1"><a class="header-anchor" href="#_3-4-集合"><span>3.4 集合</span></a></h3><p>集合里元素的 “位置” 不固定，每次打印集合元素的前后顺序都是随机的</p><h4 id="_3-4-1-数学运算" tabindex="-1"><a class="header-anchor" href="#_3-4-1-数学运算"><span>3.4.1 数学运算</span></a></h4><p>数学运算的结果都是返回一个新的集合</p><ol><li>交集 &amp;</li><li>并集 |</li><li>两集合的非交集部分 ^</li><li>补集（在前者但不在后者）-</li></ol><h4 id="_3-4-2-操作" tabindex="-1"><a class="header-anchor" href="#_3-4-2-操作"><span>3.4.2 操作</span></a></h4><ul><li>增删元素 add(), remove()</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>starts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
starts<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>starts<span class="token punctuation">)</span>
starts<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>starts<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-程序控制结构" tabindex="-1"><a class="header-anchor" href="#_4-程序控制结构"><span>4. 程序控制结构</span></a></h2><h4 id="_4-1-条件测试" tabindex="-1"><a class="header-anchor" href="#_4-1-条件测试"><span>4.1 条件测试</span></a></h4><h4 id="_4-1-1-非空" tabindex="-1"><a class="header-anchor" href="#_4-1-1-非空"><span>4.1.1 非空</span></a></h4><p>数据结构不为空，变量不为 0、none、False 则条件成立</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> a<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;非空&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;空的&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-2-逻辑运算" tabindex="-1"><a class="header-anchor" href="#_4-1-2-逻辑运算"><span>4.1.2 逻辑运算</span></a></h4><ul><li>与、或、非</li><li>and</li><li>or</li><li>not</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">10</span>
b <span class="token operator">=</span> <span class="token number">8</span>
c <span class="token operator">=</span> <span class="token number">12</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">&gt;</span>b<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>b<span class="token operator">&gt;</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 与</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token operator">&gt;</span>b<span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>b<span class="token operator">&gt;</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 或</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span><span class="token punctuation">(</span>a<span class="token operator">&gt;</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 非   </span>

<span class="token comment"># output</span>
<span class="token boolean">False</span>
<span class="token boolean">True</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>优先级：<code>not&gt;and&gt;or</code></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">or</span> <span class="token boolean">True</span> <span class="token keyword">and</span> <span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">or</span> <span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token boolean">True</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-1-3-存在运算" tabindex="-1"><a class="header-anchor" href="#_4-1-3-存在运算"><span>4.1.3 存在运算</span></a></h4><ul><li>in</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;byd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bmw&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;audi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;toyota&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;bmw&#39;</span> <span class="token keyword">in</span> cars<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;bens&#39;</span> <span class="token keyword">in</span> cars<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token boolean">True</span>
<span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>not in</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>cars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;byd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bmw&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;audi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;toyota&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;bmw&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> cars<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;bens&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> cars<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token boolean">False</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-遍历循环" tabindex="-1"><a class="header-anchor" href="#_4-2-遍历循环"><span>4.2 遍历循环</span></a></h3><h4 id="_4-2-1-变换迭代————字典" tabindex="-1"><a class="header-anchor" href="#_4-2-1-变换迭代————字典"><span>4.2.1 变换迭代————字典</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>students <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">201901</span><span class="token punctuation">:</span> <span class="token string">&#39;小明&#39;</span><span class="token punctuation">,</span> <span class="token number">201902</span><span class="token punctuation">:</span> <span class="token string">&#39;小红&#39;</span><span class="token punctuation">,</span> <span class="token number">201903</span><span class="token punctuation">:</span><span class="token string">&#39;小强&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> students<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># key &amp; value</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
<span class="token keyword">for</span> v <span class="token keyword">in</span> students<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># value</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
<span class="token keyword">for</span> k <span class="token keyword">in</span> students<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># keys</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>
    
<span class="token comment"># output</span>
<span class="token number">201901</span> 小明
<span class="token number">201902</span> 小红
<span class="token number">201903</span> 小强
小明
小红
小强
<span class="token number">201901</span>
<span class="token number">201902</span>
<span class="token number">201903</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-2-range-对象" tabindex="-1"><a class="header-anchor" href="#_4-2-2-range-对象"><span>4.2.2 range() 对象</span></a></h4><ul><li>range(起始:结束(该数字不包括):步长)</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># [0, 1, 4, 9, 16]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>range() 也是左闭右开！</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>res = []
for i in range(1,10,2):
    res.append(i ** 2)
print(res) # [1, 9, 25, 49, 81]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-3-for-和-else-配合" tabindex="-1"><a class="header-anchor" href="#_4-2-3-for-和-else-配合"><span>4.2.3 for 和 else 配合:</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>product_scores <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">]</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
一组十个的产品，其性能评分如果低于七十五分的超过一个，则该组产品不合格
&quot;&quot;&quot;</span>
i <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> score <span class="token keyword">in</span> product_scores<span class="token punctuation">:</span>
    <span class="token keyword">if</span> score <span class="token operator">&lt;</span> <span class="token number">75</span><span class="token punctuation">:</span>
        i <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;产品不合格&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;产品抽检合格&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-4-while-和-else-融合" tabindex="-1"><a class="header-anchor" href="#_4-2-4-while-和-else-融合"><span>4.2.4 while 和 else 融合：</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>count <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> count <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">:</span>
    count <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;循环正常执行啦&quot;</span><span class="token punctuation">)</span>
    
    
<span class="token comment"># output</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token number">4</span>
<span class="token number">5</span>
循环正常执行啦
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-控制语句注意问题" tabindex="-1"><a class="header-anchor" href="#_4-3-控制语句注意问题"><span>4.3 控制语句注意问题</span></a></h3><ul><li><p>减少多层嵌套</p></li><li><p>避免死循环</p></li><li><p>封装过于复杂的判断条件</p></li></ul><p>如果条件判断里的表达式过于复杂，出现多次的 not/and/or 等</p><p>会导致可读性大打折扣———— <strong>考虑将条件封装为函数</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> d<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token keyword">not</span> e<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;太复杂了！&quot;</span><span class="token punctuation">)</span>

numbers <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">judge</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e <span class="token operator">=</span> num
    x <span class="token operator">=</span> a <span class="token operator">&gt;</span> b
    y <span class="token operator">=</span> c <span class="token operator">&gt;</span> d
    z <span class="token operator">=</span> <span class="token keyword">not</span> e
    <span class="token keyword">return</span> x <span class="token keyword">and</span> y <span class="token keyword">and</span> z

<span class="token keyword">if</span> judge<span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;nice!&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># nice!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-函数" tabindex="-1"><a class="header-anchor" href="#_5-函数"><span>5. 函数</span></a></h2><h3 id="_5-1-关键字参数与位置参数" tabindex="-1"><a class="header-anchor" href="#_5-1-关键字参数与位置参数"><span>5.1 关键字参数与位置参数</span></a></h3><p>关键字参数</p><ul><li>严格按照位置顺序，用实参对形参进行赋值（关联）</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>
function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>位置参数</p><ul><li>打破位置限制，直呼其名的进行值的传递</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>function<span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>x<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>两者可以混用，但是关键字参数必须放在位置参数后面</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-默认参数" tabindex="-1"><a class="header-anchor" href="#_5-2-默认参数"><span>5.2 默认参数</span></a></h3><ul><li>提前在函数里设定好的值————必须放在非默认参数后面！！！</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sex<span class="token operator">=</span><span class="token string">&#39;male&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># sex 有默认值，一定要放最后</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sex<span class="token punctuation">)</span>

register<span class="token punctuation">(</span><span class="token string">&#39;ryan&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span>
<span class="token comment"># output</span>
ryan <span class="token number">19</span> male
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>或者可以直接传值————直接修改默认值</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sex<span class="token operator">=</span><span class="token string">&#39;male&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sex<span class="token punctuation">)</span>

register<span class="token punctuation">(</span><span class="token string">&#39;ryan&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span>
register<span class="token punctuation">(</span><span class="token string">&#39;winter&#39;</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&#39;female&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># output</span>

ryan <span class="token number">19</span> male
winter <span class="token number">22</span> female
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认参数应该设置为不可变的类型（数字、字符串、元组）</p><ul><li>默认参数应该设置为不可变的类型</li></ul><p>否则：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>ls<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span><span class="token punctuation">)</span>
    ls<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span>

function<span class="token punctuation">(</span><span class="token punctuation">)</span>
function<span class="token punctuation">(</span><span class="token punctuation">)</span>
function<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1903176266176</span>
<span class="token number">1903176266176</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token number">1903176266176</span>
<span class="token number">1903176266176</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
<span class="token number">1903176266176</span>
<span class="token number">1903176266176</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以应该：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>ls<span class="token operator">=</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span><span class="token punctuation">)</span>
    ls <span class="token operator">+=</span> <span class="token string">&#39;3.7&#39;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span>
    
function<span class="token punctuation">(</span><span class="token punctuation">)</span>
function<span class="token punctuation">(</span><span class="token punctuation">)</span>
function<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">2334782625648</span>
<span class="token number">2334787222576</span>
Python3<span class="token punctuation">.</span><span class="token number">7</span>
<span class="token number">2334782625648</span>
<span class="token number">2334787222512</span>
Python3<span class="token punctuation">.</span><span class="token number">7</span>
<span class="token number">2334782625648</span>
<span class="token number">2334787222576</span>
Python3<span class="token punctuation">.</span><span class="token number">7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>利用默认参数决定参数是否加入函数中</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">name</span><span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> middle_name<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># middle_name 默认是没有的，只有用户输入 middle_name 才会有</span>
    <span class="token keyword">if</span> middle_name<span class="token punctuation">:</span>
        <span class="token keyword">return</span> first_name <span class="token operator">+</span> middle_name <span class="token operator">+</span> last_name
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> first_name <span class="token operator">+</span> last_name

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;j&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;j&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
l j
l x j
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-可变参数" tabindex="-1"><a class="header-anchor" href="#_5-3-可变参数"><span>5.3 可变参数</span></a></h3><ol><li>*args</li></ol><p>必须放在参数最后</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span>  <span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>

function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>实参拆分</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span>  <span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>

function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span>  <span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>

function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>给列表、字符串、元组、集合拆分</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span>  <span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>

function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span>  <span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>

function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token punctuation">(</span><span class="token string">&#39;h&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;l&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;l&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>可变长参数 **kwargs</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">)</span>

function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> a<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span> <span class="token comment"># 多余参数以字典形式打包传递给 kwargs </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字典实参拆分</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">)</span>

function<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">**</span><span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-全局变量" tabindex="-1"><a class="header-anchor" href="#_5-4-全局变量"><span>5.4 全局变量</span></a></h3><ul><li>在函数外定义的变量</li><li>全局变量在函数体内直接被使用</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>n <span class="token operator">=</span> <span class="token number">3</span>
ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token keyword">def</span> <span class="token function">multipy</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    z <span class="token operator">=</span> n<span class="token operator">*</span>x<span class="token operator">*</span>y
    ls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>z<span class="token punctuation">)</span>
    <span class="token keyword">return</span> z

<span class="token keyword">print</span><span class="token punctuation">(</span>multipy<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">54</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-4-1-通过-global-在函数体内定义全局变量" tabindex="-1"><a class="header-anchor" href="#_5-4-1-通过-global-在函数体内定义全局变量"><span>5.4.1 通过 global 在函数体内定义全局变量</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 没有设置全局变量</span>
<span class="token keyword">def</span> <span class="token function">multipy0</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span> 
    z <span class="token operator">=</span> x<span class="token operator">*</span>y 
    <span class="token keyword">return</span> z
<span class="token keyword">print</span><span class="token punctuation">(</span>multipy0<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\basic_knowledge_extension\\function\\function.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">126</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span>
NameError<span class="token punctuation">:</span> name <span class="token string">&#39;z&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined





<span class="token comment"># 设置为全局变量</span>
<span class="token keyword">def</span> <span class="token function">multipy1</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> z
    z <span class="token operator">=</span> x<span class="token operator">*</span>y
    <span class="token keyword">return</span> z

<span class="token keyword">print</span><span class="token punctuation">(</span>multipy1<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">18</span>
<span class="token number">18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-返回值" tabindex="-1"><a class="header-anchor" href="#_5-5-返回值"><span>5.5 返回值</span></a></h3><ol><li>单个返回值</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> x<span class="token operator">**</span><span class="token number">2</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>function<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>多个返回值</li></ol><ul><li>以元组形式返回</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> x<span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">3</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>function<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>拆分赋值</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> x<span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">3</span>

a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> function<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token number">2</span> <span class="token number">4</span> <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>没有 return 语句， 返回值为 None</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>

a <span class="token operator">=</span> function<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token comment"># output</span>
hello
<span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-6-匿名函数" tabindex="-1"><a class="header-anchor" href="#_5-6-匿名函数"><span>5.6 匿名函数</span></a></h3><p>基本形式：</p><p>lambda 变量: 函数体</p><ol><li></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>f <span class="token operator">=</span> <span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token string">&#39;Hello world&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
Hello world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">:</span> a<span class="token operator">+</span><span class="token number">10</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">11</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">:</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
squared <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>squared<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>扩展使用方法:</p><ol><li>sort, sorted</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
ls<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span>

ls<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key <span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ls<span class="token punctuation">)</span>

ls_sorted <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>ls<span class="token punctuation">,</span> key <span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>ls_sorted<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>max, min</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
n <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>ls<span class="token punctuation">,</span> key <span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
m <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>ls<span class="token punctuation">,</span> key <span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-类" tabindex="-1"><a class="header-anchor" href="#_6-类"><span>6. 类</span></a></h2><h3 id="_6-1-类的定义" tabindex="-1"><a class="header-anchor" href="#_6-1-类的定义"><span>6.1 类的定义</span></a></h3><p>三要素：类名、属性、方法</p><h4 id="_6-1-1-类的命名" tabindex="-1"><a class="header-anchor" href="#_6-1-1-类的命名"><span>6.1.1 类的命名</span></a></h4><ul><li>要有实际意义</li><li>驼峰命名法，如 CreditCard</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;类前空两行&quot;&quot;&quot;</span>

<span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;对该类进行简单介绍&quot;&quot;&quot;</span>
    <span class="token keyword">pass</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;类后空两行&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-1-2-类的属性" tabindex="-1"><a class="header-anchor" href="#_6-1-2-类的属性"><span>6.1.2 类的属性</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># def __init__(self,要传递的参数) 初始化类的属性</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>

<span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟汽车&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化汽车属性&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>brand <span class="token operator">=</span> brand <span class="token comment"># 汽车的品牌</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model <span class="token comment"># 汽车的属性</span>
        self<span class="token punctuation">.</span>year <span class="token operator">=</span> year <span class="token comment"># 汽车出厂年份</span>
        self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment"># 新车总里程初始化为 0     </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-1-3-类的方法" tabindex="-1"><a class="header-anchor" href="#_6-1-3-类的方法"><span>6.1.3 类的方法</span></a></h4><p>可以理解为类内部函数</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>

<span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟汽车&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化汽车属性&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>brand <span class="token operator">=</span> brand <span class="token comment"># 汽车的品牌</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model <span class="token comment"># 汽车的属性</span>
        self<span class="token punctuation">.</span>year <span class="token operator">=</span> year <span class="token comment"># 汽车出厂年份</span>
        self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment"># 新车总里程初始化为 0</span>
    <span class="token keyword">def</span> <span class="token function">get_main_information</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取汽车主要信息&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;品牌:{} 型号:{} 出厂年份:{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>brand<span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取总里程&quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;行车总里程: {}公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span>
        
        
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-创建实例" tabindex="-1"><a class="header-anchor" href="#_6-2-创建实例"><span>6.2 创建实例</span></a></h3><h4 id="_6-2-1-实例的创建" tabindex="-1"><a class="header-anchor" href="#_6-2-1-实例的创建"><span>6.2.1 实例的创建</span></a></h4><p>将实例赋值给对象、实例化过程中，传入相应的参数</p><p>v = 类名（必要的初始化参数）</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code> my_new_car <span class="token operator">=</span> car<span class="token punctuation">(</span><span class="token string">&#39;audi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a6&#39;</span><span class="token punctuation">,</span> <span class="token number">2018</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_6-2-2-访问属性" tabindex="-1"><a class="header-anchor" href="#_6-2-2-访问属性"><span>6.2.2 访问属性</span></a></h4><p>实例名.属性名</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>my_new_car<span class="token punctuation">.</span>brand<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_new_car<span class="token punctuation">.</span>model<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_new_car<span class="token punctuation">.</span>year<span class="token punctuation">)</span>

<span class="token comment"># output</span>
audi
a6
<span class="token number">2018</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-2-3-调用方法" tabindex="-1"><a class="header-anchor" href="#_6-2-3-调用方法"><span>6.2.3 调用方法</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟汽车&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化汽车属性&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>brand <span class="token operator">=</span> brand  <span class="token comment"># 汽车的品牌</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model  <span class="token comment"># 汽车的属性</span>
        self<span class="token punctuation">.</span>year <span class="token operator">=</span> year  <span class="token comment"># 汽车出厂年份</span>
        self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 新车总里程初始化为 0</span>

    <span class="token keyword">def</span> <span class="token function">get_main_information</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取汽车主要信息&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;品牌:{} 型号:{} 出厂年份:{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>brand<span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取总里程&quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;行车总里程: {}公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>品牌:audi 型号:a6 出厂年份:2018</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>mileage <span class="token operator">=</span> my_new_car<span class="token punctuation">.</span>get_mileage<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>mileage<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>行车总里程: 0公里</p><h4 id="_6-2-4-修改属性" tabindex="-1"><a class="header-anchor" href="#_6-2-4-修改属性"><span>6.2.4 修改属性</span></a></h4><ol><li>直接修改</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟汽车&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化汽车属性&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>brand <span class="token operator">=</span> brand  <span class="token comment"># 汽车的品牌</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model  <span class="token comment"># 汽车的属性</span>
        self<span class="token punctuation">.</span>year <span class="token operator">=</span> year  <span class="token comment"># 汽车出厂年份</span>
        self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 新车总里程初始化为 0</span>

    <span class="token keyword">def</span> <span class="token function">get_main_information</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取汽车主要信息&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;品牌:{} 型号:{} 出厂年份:{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>brand<span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取总里程&quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;行车总里程: {}公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span>

<span class="token comment"># 先访问</span>
my_old_car <span class="token operator">=</span> car<span class="token punctuation">(</span><span class="token string">&#39;byd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;陆&#39;</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">)</span>

<span class="token comment"># 后修改</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_old_car<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span> <span class="token comment"># 0</span>
my_old_car<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">99999</span>

<span class="token comment"># 查看修改效果</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_old_car<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span> <span class="token comment"># 99999</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_old_car<span class="token punctuation">.</span>get_mileage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 行车总里程: 99999公里</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建一个新的方法修改</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟汽车&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化汽车属性&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>brand <span class="token operator">=</span> brand  <span class="token comment"># 汽车的品牌</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model  <span class="token comment"># 汽车的属性</span>
        self<span class="token punctuation">.</span>year <span class="token operator">=</span> year  <span class="token comment"># 汽车出厂年份</span>
        self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 新车总里程初始化为 0</span>

    <span class="token keyword">def</span> <span class="token function">get_main_information</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取汽车主要信息&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;品牌:{} 型号:{} 出厂年份:{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>brand<span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取总里程&quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;行车总里程: {}公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span>
    
    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>my_old_car <span class="token operator">=</span> car<span class="token punctuation">(</span><span class="token string">&#39;byd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;陆&#39;</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_old_car<span class="token punctuation">.</span>get_mileage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 行车总里程: 0公里</span>
my_old_car<span class="token punctuation">.</span>set_mileage<span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_old_car<span class="token punctuation">.</span>get_mileage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 行车总里程: 8000公里</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>继续拓展</li></ol><ul><li>禁止设置负里程</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟汽车&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化汽车属性&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>brand <span class="token operator">=</span> brand  <span class="token comment"># 汽车的品牌</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model  <span class="token comment"># 汽车的属性</span>
        self<span class="token punctuation">.</span>year <span class="token operator">=</span> year  <span class="token comment"># 汽车出厂年份</span>
        self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 新车总里程初始化为 0</span>

    <span class="token keyword">def</span> <span class="token function">get_main_information</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取汽车主要信息&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;品牌:{} 型号:{} 出厂年份:{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>brand<span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取总里程&quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;行车总里程: {}公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">set_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;设置总里程数&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> distance <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> distance
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;里程数不可设置为负&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>my_old_car <span class="token operator">=</span> car<span class="token punctuation">(</span><span class="token string">&#39;byd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;陆&#39;</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">)</span>

my_old_car<span class="token punctuation">.</span>set_mileage<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">8000</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_old_car<span class="token punctuation">.</span>get_mileage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 

<span class="token comment"># output</span>
里程数不可设置为负
行车总里程<span class="token punctuation">:</span> <span class="token number">0</span>公里
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>将每次的里程数增加</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟汽车&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化汽车属性&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>brand <span class="token operator">=</span> brand  <span class="token comment"># 汽车的品牌</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model  <span class="token comment"># 汽车的属性</span>
        self<span class="token punctuation">.</span>year <span class="token operator">=</span> year  <span class="token comment"># 汽车出厂年份</span>
        self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 新车总里程初始化为 0</span>

    <span class="token keyword">def</span> <span class="token function">get_main_information</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取汽车主要信息&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;品牌:{} 型号:{} 出厂年份:{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>brand<span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取总里程&quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;行车总里程: {}公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">set_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;设置总里程数&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> distance <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> distance
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;里程数不可设置为负&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">increment_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;总里程数累计&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> distance <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>mileage <span class="token operator">+=</span> distance
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;新增里程数不能为负&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>my_old_car <span class="token operator">=</span> car<span class="token punctuation">(</span><span class="token string">&#39;byd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;陆&#39;</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>my_old_car<span class="token punctuation">.</span>get_mileage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
my_old_car<span class="token punctuation">.</span>set_mileage<span class="token punctuation">(</span><span class="token number">9999</span><span class="token punctuation">)</span>
my_old_car<span class="token punctuation">.</span>increment_mileage<span class="token punctuation">(</span><span class="token number">90000</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_old_car<span class="token punctuation">.</span>get_mileage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
行车总里程<span class="token punctuation">:</span> <span class="token number">0</span>公里
行车总里程<span class="token punctuation">:</span> <span class="token number">99999</span>公里
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3-类的继承" tabindex="-1"><a class="header-anchor" href="#_6-3-类的继承"><span>6.3 类的继承</span></a></h3><h4 id="_6-3-1-简单的继承" tabindex="-1"><a class="header-anchor" href="#_6-3-1-简单的继承"><span>6.3.1 简单的继承</span></a></h4><p><strong>父类</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟汽车&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化汽车属性&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>brand <span class="token operator">=</span> brand  <span class="token comment"># 汽车的品牌</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model  <span class="token comment"># 汽车的属性</span>
        self<span class="token punctuation">.</span>year <span class="token operator">=</span> year  <span class="token comment"># 汽车出厂年份</span>
        self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 新车总里程初始化为 0</span>

    <span class="token keyword">def</span> <span class="token function">get_main_information</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取汽车主要信息&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;品牌:{} 型号:{} 出厂年份:{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>brand<span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取总里程&quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;行车总里程: {}公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">set_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;设置总里程数&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> distance <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> distance
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;里程数不可设置为负&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">increment_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;总里程数累计&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> distance <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>mileage <span class="token operator">+=</span> distance
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;新增里程数不能为负&quot;</span><span class="token punctuation">)</span>

my_old_car <span class="token operator">=</span> car<span class="token punctuation">(</span><span class="token string">&#39;byd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;陆&#39;</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">)</span>


my_old_car<span class="token punctuation">.</span>set_mileage<span class="token punctuation">(</span><span class="token number">9999</span><span class="token punctuation">)</span>
my_old_car<span class="token punctuation">.</span>increment_mileage<span class="token punctuation">(</span><span class="token number">90000</span><span class="token punctuation">)</span>


my_new_car <span class="token operator">=</span> car<span class="token punctuation">(</span><span class="token string">&#39;audi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;A6&#39;</span><span class="token punctuation">,</span> <span class="token number">2018</span><span class="token punctuation">)</span>

my_cars <span class="token operator">=</span> <span class="token punctuation">[</span>my_new_car<span class="token punctuation">,</span> my_old_car<span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>my_cars<span class="token punctuation">)</span>
<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token operator">&lt;</span>__main__<span class="token punctuation">.</span>car <span class="token builtin">object</span> at <span class="token number">0x000001EB5585CF10</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>__main__<span class="token punctuation">.</span>car <span class="token builtin">object</span> at <span class="token number">0x000001EB5585CFD0</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>子类</strong></p><p>class 子类名（父类名）：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">car</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟汽车&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化汽车属性&quot;&quot;&quot;</span>
        self<span class="token punctuation">.</span>brand <span class="token operator">=</span> brand  <span class="token comment"># 汽车的品牌</span>
        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model  <span class="token comment"># 汽车的属性</span>
        self<span class="token punctuation">.</span>year <span class="token operator">=</span> year  <span class="token comment"># 汽车出厂年份</span>
        self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 新车总里程初始化为 0</span>

    <span class="token keyword">def</span> <span class="token function">get_main_information</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取汽车主要信息&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;品牌:{} 型号:{} 出厂年份:{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>brand<span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取总里程&quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;行车总里程: {}公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>mileage<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">set_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;设置总里程数&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> distance <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>mileage <span class="token operator">=</span> distance
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;里程数不可设置为负&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">increment_mileage</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;总里程数累计&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> distance <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>mileage <span class="token operator">+=</span> distance
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;新增里程数不能为负&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建子类：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Elecriccar</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟电动汽车&quot;&quot;&quot;</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化电动汽车属性&quot;&quot;&quot;</span>
    <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>brnad<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span> <span class="token comment"># 声明继承父类的属性</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>已经包含父类的所有方法：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>my_electric_car <span class="token operator">=</span> Elecriccar<span class="token punctuation">(</span><span class="token string">&#39;Nextweek&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;FF91&#39;</span><span class="token punctuation">,</span> <span class="token number">2046</span><span class="token punctuation">)</span>
my_electric_car<span class="token punctuation">.</span>get_main_information<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>品牌:Nextweek 型号:FF91 出厂年份:2046</p><h4 id="_6-3-2-给子类添加属性和方法" tabindex="-1"><a class="header-anchor" href="#_6-3-2-给子类添加属性和方法"><span>6.3.2 给子类添加属性和方法</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Elecriccar</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟电动汽车&quot;&quot;&quot;</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">,</span> bettery_size<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化电动汽车属性&quot;&quot;&quot;</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span> <span class="token comment"># 声明继承父类的属性</span>
        self<span class="token punctuation">.</span>bettery_size <span class="token operator">=</span> bettery_size <span class="token comment"># 电池容量</span>
        self<span class="token punctuation">.</span>electric_quantity <span class="token operator">=</span> bettery_size <span class="token comment"># 电池剩余数量</span>
        self<span class="token punctuation">.</span>electric_distance_ratio <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment"># 电量距离换算系数 5 公里/kw.h</span>
        self<span class="token punctuation">.</span>remainder_range <span class="token operator">=</span> self<span class="token punctuation">.</span>electric_quantity<span class="token operator">*</span>self<span class="token punctuation">.</span>electric_distance_ratio <span class="token comment"># 剩余可行驶里程</span>

    <span class="token keyword">def</span> <span class="token function">get_electric_quantity</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;查看当前电池电量&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;当前电池的电量: {} Kw.h&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>electric_quantity<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">set_electric_quantity</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> electric_quantity<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;设置电池剩余电量，重新计算电量可支撑行驶里程&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> electric_quantity <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token keyword">and</span> electric_quantity <span class="token operator">&lt;=</span> self<span class="token punctuation">.</span>bettery_size<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>electric_quantity <span class="token operator">=</span> electric_quantity
            self<span class="token punctuation">.</span>remainder_range <span class="token operator">=</span> self<span class="token punctuation">.</span>electric_quantity<span class="token operator">*</span>self<span class="token punctuation">.</span>electric_distance_ratio
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;电量未设置在合理范围之内&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">get_remainder_range</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;查看剩余可行驶里程&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;当前电量还可以继续行驶 {} 公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>remainder_range<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>my_electric_car <span class="token operator">=</span> Elecriccar<span class="token punctuation">(</span><span class="token string">&#39;nextweek&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;FF91&#39;</span><span class="token punctuation">,</span> <span class="token number">2046</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span>
my_electric_car<span class="token punctuation">.</span>get_electric_quantity<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 获取当前电池电量</span>
my_electric_car<span class="token punctuation">.</span>get_remainder_range<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 获取当前剩余可行使里程</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当前电池的电量: 70 Kw.h 当前电量还可以继续行驶 350 公里</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>my_electric_car<span class="token punctuation">.</span>set_electric_quantity<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token comment"># 重设电池电量</span>
my_electric_car<span class="token punctuation">.</span>get_electric_quantity<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 获取当前电池电量</span>
my_electric_car<span class="token punctuation">.</span>get_remainder_range<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 获取当前剩余可行驶里程</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当前电池的电量: 50 Kw.h 当前电量还可以继续行驶 250 公里</p><h4 id="_6-3-3-重写父类的方法————多态" tabindex="-1"><a class="header-anchor" href="#_6-3-3-重写父类的方法————多态"><span>6.3.3 重写父类的方法————多态</span></a></h4><p>原先：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>my_electric_car<span class="token punctuation">.</span>get_main_information<span class="token punctuation">(</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>品牌:nextweek 型号:FF91 出厂年份:2046</p><p>修改后：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Elecriccar</span><span class="token punctuation">(</span>car<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;模拟电动汽车&quot;&quot;&quot;</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">,</span> bettery_size<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;初始化电动汽车属性&quot;&quot;&quot;</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>brand<span class="token punctuation">,</span> model<span class="token punctuation">,</span> year<span class="token punctuation">)</span> <span class="token comment"># 声明继承父类的属性</span>
        self<span class="token punctuation">.</span>bettery_size <span class="token operator">=</span> bettery_size <span class="token comment"># 电池容量</span>
        self<span class="token punctuation">.</span>electric_quantity <span class="token operator">=</span> bettery_size <span class="token comment"># 电池剩余数量</span>
        self<span class="token punctuation">.</span>electric_distance_ratio <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment"># 电量距离换算系数 5 公里/kw.h</span>
        self<span class="token punctuation">.</span>remainder_range <span class="token operator">=</span> self<span class="token punctuation">.</span>electric_quantity<span class="token operator">*</span>self<span class="token punctuation">.</span>electric_distance_ratio <span class="token comment"># 剩余可行驶里程</span>

    <span class="token keyword">def</span> <span class="token function">get_main_information</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 重写父类方法</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;获取汽车主要信息&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;品牌:{}, 型号:{}, 出厂年份:{}, 续航里程:{} 公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>brand<span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">,</span> self<span class="token punctuation">.</span>year<span class="token punctuation">,</span> self<span class="token punctuation">.</span>bettery_size<span class="token operator">*</span>self<span class="token punctuation">.</span>electric_distance_ratio<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get_electric_quantity</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;查看当前电池电量&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;当前电池的电量: {} Kw.h&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>electric_quantity<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">set_electric_quantity</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> electric_quantity<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;设置电池剩余电量，重新计算电量可支撑行驶里程&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> electric_quantity <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token keyword">and</span> electric_quantity <span class="token operator">&lt;=</span> self<span class="token punctuation">.</span>bettery_size<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>electric_quantity <span class="token operator">=</span> electric_quantity
            self<span class="token punctuation">.</span>remainder_range <span class="token operator">=</span> self<span class="token punctuation">.</span>electric_quantity<span class="token operator">*</span>self<span class="token punctuation">.</span>electric_distance_ratio
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;电量未设置在合理范围之内&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">get_remainder_range</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;查看剩余可行驶里程&quot;&quot;&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;当前电量还可以继续行驶 {} 公里&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>remainder_range<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>my_electric_car <span class="token operator">=</span> Elecriccar<span class="token punctuation">(</span><span class="token string">&#39;nextweek&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;FF91&#39;</span><span class="token punctuation">,</span> <span class="token number">2046</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span>
my_electric_car<span class="token punctuation">.</span>get_main_information<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>品牌:nextweek, 型号:FF91, 出厂年份:2046, 续航里程:350 公里</p><h4 id="_6-3-4-用在类中的实例" tabindex="-1"><a class="header-anchor" href="#_6-3-4-用在类中的实例"><span>6.3.4 用在类中的实例</span></a></h4><p>把电池抽象成一个对象</p><p>逻辑更加清晰</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h2 id="_7-文件、异常和模块" tabindex="-1"><a class="header-anchor" href="#_7-文件、异常和模块"><span>7. 文件、异常和模块</span></a></h2><h3 id="_7-1-文件的读写" tabindex="-1"><a class="header-anchor" href="#_7-1-文件的读写"><span>7.1 文件的读写</span></a></h3><h4 id="_7-1-1-文件的代开通用格式" tabindex="-1"><a class="header-anchor" href="#_7-1-1-文件的代开通用格式"><span>7.1.1 文件的代开通用格式</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;文件路径&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;打开模式&quot;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;操作文件的字符编码&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token string">&#39;对文件进行相应的读写操作&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 with 块的好处：执行完毕后，自动对文件进行 close 操作。</p><ul><li>实例：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;E:\\ipython\\测试文件.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;gbk&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> <span class="token comment"># 第一步：打开文件</span>
    text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 第二步：读取文件</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><strong>文件路径</strong></li></ol><ul><li>完整路径</li><li>程序与文件在同一文件夹，可简化成文件名</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;测试文件.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;gbk&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><strong>打开模式</strong></li></ol><table><thead><tr><th>模式</th><th>功能/效果</th></tr></thead><tbody><tr><td>r 只读模式</td><td>如文件不存在，则报错</td></tr><tr><td>w 覆盖写模式</td><td>如文件不存在，则创建；如文件存在，则完全覆盖原文件</td></tr><tr><td>x 创建写模式</td><td>如文件不存在，则创建；如文件存在，则报错</td></tr><tr><td>a 追加写模式</td><td>如文件不存在，则创建；如文件存在，则在原文件后追加内容</td></tr><tr><td>b 二进制文件模式</td><td>不能单独使用，需要配合使用如‘rb’，‘wb’，‘ab’，<strong>该模式不需指定 encoding</strong></td></tr><tr><td>t 文本文件模式</td><td>默认值，需配合使用如‘rt’，’wt‘，’at&#39;，一般省略，简写成‘r’，‘w’，‘a’</td></tr><tr><td>+</td><td>与‘r’，‘w&#39;，’x&#39;，‘a&#39; 配合使用，在原功能基础上，增加读写功能</td></tr></tbody></table><ol start="3"><li><strong>字符编码</strong></li></ol><ul><li>万国码 utf-8</li></ul><p>包含全世界所有国家地区需要用到的字符</p><ul><li>中文编码 gbk</li></ul><p>专门解决中文编码问题</p><ul><li>windows 中文系统下，如果缺省，则默认为 gbk（所在区域的编码）</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>为了清楚起见，除了处理二进制文件，尽量不要缺省 encoding</p></div><h4 id="_7-1-2-文件的读取" tabindex="-1"><a class="header-anchor" href="#_7-1-2-文件的读取"><span>7.1.2 文件的读取</span></a></h4><ol><li><strong>读取整个内容————f.read()</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> <span class="token comment"># 第一步：打开文件</span>
    text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 第二步：读取文件</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>

<span class="token comment"># output</span>
临江仙·滚滚长江东逝水
滚滚长江东逝水，浪花淘尽英雄。
是非成败转头空。
青山依旧在，几度夕阳红。
白发渔樵江渚上，惯看秋月春风。
一壶浊酒喜相逢。
古今多少事，都付笑谈中。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>‘r’ 在正常情况下可以缺省</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> <span class="token comment"># 第一步：打开文件</span>
    text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 第二步：读取文件</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>

<span class="token comment"># output</span>
临江仙·滚滚长江东逝水
滚滚长江东逝水，浪花淘尽英雄。
是非成败转头空。
青山依旧在，几度夕阳红。
白发渔樵江渚上，惯看秋月春风。
一壶浊酒喜相逢。
古今多少事，都付笑谈中。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>解码模式不匹配</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;gbk&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>

<span class="token comment"># output</span>

Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\basic_knowledge_extension\\function\\functionhomework.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">38</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
UnicodeDecodeError<span class="token punctuation">:</span> <span class="token string">&#39;gbk&#39;</span> codec can&#39;t decode byte <span class="token number">0x80</span> <span class="token keyword">in</span> position <span class="token number">50</span><span class="token punctuation">:</span> illegal multibyte sequence
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>逐行进行读取————f.readline()</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    text <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 只读取一行</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token comment"># 临江仙·滚滚长江东逝水</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> 
    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
    
<span class="token comment"># output</span>
临江仙·滚滚长江东逝水

滚滚长江东逝水，浪花淘尽英雄。

是非成败转头空。

是非成败转头空。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        text <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> text<span class="token punctuation">:</span> <span class="token comment"># 文章读取完末尾段行后，再继续读取就是空行</span>
            <span class="token keyword">break</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token comment"># print(text == &#39;\\n&#39;)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 保留原行的换行，使 print() 的换行不起作用</span>

<span class="token comment"># output</span>
临江仙·滚滚长江东逝水
滚滚长江东逝水，浪花淘尽英雄。
是非成败转头空。
青山依旧在，几度夕阳红。
白发渔樵江渚上，惯看秋月春风。
一壶浊酒喜相逢。
古今多少事，都付笑谈中。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>读入所有行，以每行为元素形成一个列表————f.readlines()</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    text <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 注意每行末尾有换行符</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token string">&#39;临江仙·滚滚长江东逝水\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;滚滚长江东逝水，浪花淘尽英雄。\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;是非成败转头空。\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;青山依旧在，几度夕阳红。\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;白发渔樵江渚上，惯看秋月春风。\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;一壶浊酒喜相逢。\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;古今多少事，都付笑谈中。&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>通过循环，输出列表中元素</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">for</span> text <span class="token keyword">in</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
       
<span class="token comment"># output</span>
临江仙·滚滚长江东逝水
滚滚长江东逝水，浪花淘尽英雄。
是非成败转头空。
青山依旧在，几度夕阳红。
白发渔樵江渚上，惯看秋月春风。
一壶浊酒喜相逢。
古今多少事，都付笑谈中。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>小结：</strong> 文件比较大时, <strong><span style="color:orange;"> read()  </span></strong> 和 <strong><span style="color:orange;"> readlines() </span></strong> 占用内存过大，不建议使用</li></ol><p>​ 而 readline 使用起来又不太方便————直接使用 <strong><span style="color:red;"> f </span></strong></p><p>​ f 本身就是一个可迭代对象，每次迭代读取一行内容</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">for</span> text <span class="token keyword">in</span> f<span class="token punctuation">:</span> <span class="token comment"># f 本身就是一个可迭代对象，每次迭代读取一行内容</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        
<span class="token comment"># output</span>
临江仙·滚滚长江东逝水
滚滚长江东逝水，浪花淘尽英雄。
是非成败转头空。
青山依旧在，几度夕阳红。
白发渔樵江渚上，惯看秋月春风。
一壶浊酒喜相逢。
古今多少事，都付笑谈中。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li><strong>二进制文件</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-1-3-文件的写入" tabindex="-1"><a class="header-anchor" href="#_7-1-3-文件的写入"><span>7.1.3 文件的写入</span></a></h4><ol><li>像文件写入一个字符串——f.write()</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\文本文档.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;你曾经对我说\\n&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 文件不存在则立刻创建一个</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;你永远爱着我\\n&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 如需换行，末尾加换行符\\n</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;爱情这东西我明白\\n&#39;</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;但永远时什么\\n&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\文本文档.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;姑娘你别哭泣\\n&#39;</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;我俩还在一起\\n&#39;</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;今天的欢乐\\n&#39;</span><span class="token punctuation">)</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;将是明天创痛的回忆\\n&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\文本文档.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
    
<span class="token comment"># output</span>
你曾经对我说
你永远爱着我
爱情这东西我明白
但永远时什么
姑娘你别哭泣
我俩还在一起
今天的欢乐
将是明天创痛的回忆
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>将一个元素为字符串的列表整体写入文件——f.writelines()</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;so baby pull me closer\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;in the backseat of your rover,\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;that I know you can not afford&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\文本文档.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>lst<span class="token punctuation">)</span>

<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\文本文档.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
<span class="token comment"># output</span>
so baby pull me closer
<span class="token keyword">in</span> the backseat of your rover<span class="token punctuation">,</span>
that I know you can <span class="token keyword">not</span> afford
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-1-4-既读又写" tabindex="-1"><a class="header-anchor" href="#_7-1-4-既读又写"><span>7.1.4 既读又写</span></a></h4><p>编辑文本和阅读文本常常是同时需要的，那么‘r+’，‘w+’，‘a+’ 才可以满足我们的需要</p><p>下面介绍一个在此处常用的函数：</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>.seek(step:position)</p><p>step: 光标要移动的步数</p><p>position: 光标的初始位置（0，1，2）————‘0’ 代表文本开头，‘1’代表当前位置，‘2’代表文本末尾</p></div><ol><li>‘r+’</li></ol><ul><li>如果文件名不存在则报错</li><li>指针在开始</li><li>要把指针移到末尾才能开始写，否则会覆盖前面内容</li></ul><p>查看文件后想编写文章内容：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\文本文档.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r+&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 将指针指到文章末尾</span>
    text <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;我的名字叫做 ryan \\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;初次见面请多关照。\\n&#39;</span><span class="token punctuation">]</span>
    f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>text<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你好 你是谁？ 我的名字叫做 ryan 初次见面请多关照。</p><ol start="2"><li>‘w+’</li></ol><ul><li>若文件不存在，则创建</li><li>若文件存在，则会立刻清空原本内容！！！</li></ul><p>覆盖写文件后想查看全部文本：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\文本文档.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;w+&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    text <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;winter is ryan&#39;s girlfriend\\n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;金旼炡是陆兴久的女友\\n&quot;</span><span class="token punctuation">]</span>
    f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token comment"># 写完文本，指针在结尾</span>
    f<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 移动指针到开头</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 阅读全文</span>

<span class="token comment"># output</span>
winter <span class="token keyword">is</span> ryan&#39;s girlfriend
金旼炡是陆兴久的女友
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>‘a+’</li></ol><ul><li>若文件不存在，则创建</li><li>指针在末尾，添加新内容，不会清空原内容</li></ul><p>添加写文件后想查看全部文本：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\文本文档.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;a+&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    text <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;ryan is winter&#39;s boyfriend\\n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;陆兴久是金旼炡的男友\\n&quot;</span><span class="token punctuation">]</span>
    f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token comment"># 写完文本，指针在结尾</span>
    f<span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 移动指针到开头</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 阅读全文</span>

<span class="token comment"># output</span>
winter <span class="token keyword">is</span> ryan&#39;s girlfriend
金旼炡是陆兴久的女友
ryan <span class="token keyword">is</span> winter&#39;s boyfriend
陆兴久是金旼炡的男友
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-1-5-数据的存储与读取" tabindex="-1"><a class="header-anchor" href="#_7-1-5-数据的存储与读取"><span>7.1.5 数据的存储与读取</span></a></h4><p>通用的数据格式,可以在不同语言中加载和存储</p><p>以下讲解一些比较简单的数据存储结构 csv 和 json</p><ol><li>csv 格式</li></ol><p>由逗号将数据分开的字符序列，可以由 excel 打开</p><ul><li>读取</li></ul><div class="language-python\\ line-numbers-mode" data-ext="python\\" data-title="python\\"><pre class="language-python\\"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ul><li>写入</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><p>也可以借助 csv 模块完成上述操作</p><ol start="2"><li>json 格式</li></ol><p>常被用来存储字典</p><ul><li>写入——<code>dump()</code></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><ul><li>读取——<code>load()</code></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h2 id="_7-2-异常处理" tabindex="-1"><a class="header-anchor" href="#_7-2-异常处理"><span>7.2 异常处理</span></a></h2><h4 id="_7-2-1-常见异常的产生" tabindex="-1"><a class="header-anchor" href="#_7-2-1-常见异常的产生"><span>7.2.1 常见异常的产生</span></a></h4><ol><li><strong>除0运算——ZeroDivisionError</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><strong>找不到可读文件——FileNotFoundError</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;nobody.csv&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>值错误——ValueError</strong></li></ol><p>​ 传入一个不期望的值</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>s <span class="token operator">=</span> <span class="token string">&#39;1.3&#39;</span>
n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><strong>索引错误——IndexError</strong></li></ol><p>​ 下标超出序列边界</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>类型错误——TypeError</li></ol><p>​ 传入对象与要求类型不符</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&#39;3&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>其他常见类型</li></ol><p>​ NameError 使用一个为被定义的变量</p><p>​ KeyError 试图访问字典里不存在的键</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-2-2-异常的处理" tabindex="-1"><a class="header-anchor" href="#_7-2-2-异常的处理"><span>7.2.2 异常的处理</span></a></h4><p>提高程序的稳定性和可靠性</p><ol><li><p><strong>try + except</strong></p><ol><li><p>如果 try 内代码块顺利执行，except 不被触发</p></li><li><p>如果try 内代码块发生错误，触发 except ，执行 except 内代码块</p></li></ol></li></ol><ul><li>单分支</li></ul><p>判断对了</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">10</span>
y <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    z<span class="token operator">=</span> x<span class="token operator">/</span>y
<span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;0 不可以被除！&#39;</span><span class="token punctuation">)</span>
    
<span class="token comment"># output</span>
<span class="token number">0</span> 不可以被除！
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>判断错了</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">10</span>
y <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    z<span class="token operator">=</span> x<span class="token operator">/</span>y
<span class="token keyword">except</span> NameError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;0 不可以被除！&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;C:\\Users\\Administrator\\PycharmProjects\\Coder\\Python\\basic_knowledge_extension\\function\\functionhomework.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">187</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    z<span class="token operator">=</span> x<span class="token operator">/</span>y
ZeroDivisionError<span class="token punctuation">:</span> division by zero
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>多分支</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;ryan&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    y <span class="token operator">=</span> m
    lst<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    d<span class="token punctuation">[</span><span class="token string">&#39;sex&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">except</span> NameError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;变量名不存在&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;索引超出界限&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> KeyError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;键不存在&quot;</span><span class="token punctuation">)</span>
    
<span class="token comment"># output</span>
变量名不存在
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;ryan&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token comment"># y = m</span>
    lst<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    d<span class="token punctuation">[</span><span class="token string">&#39;sex&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">except</span> NameError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;变量名不存在&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;索引超出界限&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> KeyError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;键不存在&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
索引超出界限
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>得出结论：<strong>多分支只可检测单个问题</strong></p><ul><li>万能的异常 <strong>Exception</strong></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;ryan&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    lst<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">except</span> Exception<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;出错了&quot;</span><span class="token punctuation">)</span>
    
<span class="token comment"># output</span>
出错了
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如何捕获异常的值 ————as</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    lst<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>

dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    dic<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    b <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    s <span class="token operator">=</span> <span class="token string">&#39;1.3&#39;</span>
    n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&#39;3&#39;</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
    
<span class="token comment"># output</span>
<span class="token builtin">list</span> index out of <span class="token builtin">range</span>
<span class="token string">&#39;a&#39;</span>
division by zero
invalid literal <span class="token keyword">for</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">with</span> base <span class="token number">10</span><span class="token punctuation">:</span> <span class="token string">&#39;1.3&#39;</span>
unsupported operand <span class="token builtin">type</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token operator">+</span><span class="token punctuation">:</span> <span class="token string">&#39;int&#39;</span> <span class="token keyword">and</span> <span class="token string">&#39;str&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>try + except + else</strong></li></ol><p>如果 try 模块成功执行，那么 else 模块也执行</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\AI-learning\\三国演义片头曲.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        text <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;找不到文件&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;，&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;。&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;？&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token comment"># 去除换行符和标点符号</span>
        text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;三国演义片头曲共由{}个字组成&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">87</span>
三国演义片头曲共由<span class="token number">71</span>个字组成
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><strong>try + except + finally</strong></li></ol><p>不论 try 模块是否执行，finally 最后都执行</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
d <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;ryan&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    y <span class="token operator">=</span> m
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;不论正不正常，都将执行&quot;</span><span class="token punctuation">)</span>
    
<span class="token comment"># output</span>
name <span class="token string">&#39;m&#39;</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined
不论正不正常，都将执行
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-模块简介" tabindex="-1"><a class="header-anchor" href="#_7-3-模块简介"><span>7.3 模块简介</span></a></h3><h4 id="_7-3-1-广义模块分类" tabindex="-1"><a class="header-anchor" href="#_7-3-1-广义模块分类"><span>7.3.1 广义模块分类</span></a></h4><ol><li>python 内置</li></ol><p>时间库 time \\ 随机库 random \\ 容器数据类型 collection \\ 迭代器函数 itertools</p><ol start="2"><li>第三方库</li></ol><p>数据分析 numpy、pandas \\ 数据可视化 matplotlib \\ 机器学习 scikit-learn \\ 深度学习 Tensorflow</p><ol start="3"><li><p>自定义文件</p><ol><li>单独 py 文件</li><li>包———多个 py 文件</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 文件夹内多个 py 文件，再加一个__init__.py 文件（内容可为空）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol>`,436),c=[l];function i(u,r){return s(),a("div",null,c)}const v=n(o,[["render",i],["__file","0.basic-knowledge-extension.html.vue"]]),m=JSON.parse(`{"path":"/Notability/python/0.basic-knowledge-extension.html","title":"basic knowledge extension for Python","lang":"zh-CN","frontmatter":{"WASAWDtitle":"basic knowledge extension for Python","date":"2024-04-18T07:51:22.000Z","isOriginal":true,"category":["python"],"tag":["python","编程","教程"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"basic knowledge extension for Python 引言： 这篇文章旨在为 Ryan 本人服务 1. 基本语法元素 1.1 格式化输出 format的格式 填充输出 数字千分位分隔符 浮点数简化输出 留两位小数 按百分数输出 科学计数法输出 整数的进制转换输出 十进制整数转二进制、unicode码、十进制、八进制、十六进制输出 1...","head":[["meta",{"property":"og:url","content":"https://dailyrecord4ryan.com/Notability/python/0.basic-knowledge-extension.html"}],["meta",{"property":"og:site_name","content":"Website of Ryan"}],["meta",{"property":"og:title","content":"basic knowledge extension for Python"}],["meta",{"property":"og:description","content":"basic knowledge extension for Python 引言： 这篇文章旨在为 Ryan 本人服务 1. 基本语法元素 1.1 格式化输出 format的格式 填充输出 数字千分位分隔符 浮点数简化输出 留两位小数 按百分数输出 科学计数法输出 整数的进制转换输出 十进制整数转二进制、unicode码、十进制、八进制、十六进制输出 1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-26T15:45:10.000Z"}],["meta",{"property":"article:author","content":"Ryan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-04-18T07:51:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-26T15:45:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"basic knowledge extension for Python\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-18T07:51:22.000Z\\",\\"dateModified\\":\\"2024-04-26T15:45:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan\\",\\"url\\":\\"https://dailyrecord4ryan.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 基本语法元素","slug":"_1-基本语法元素","link":"#_1-基本语法元素","children":[{"level":3,"title":"1.1 格式化输出","slug":"_1-1-格式化输出","link":"#_1-1-格式化输出","children":[]},{"level":3,"title":"1.2 程序格式","slug":"_1-2-程序格式","link":"#_1-2-程序格式","children":[{"level":4,"title":"1. 最大行长度","slug":"_1-最大行长度","link":"#_1-最大行长度","children":[]},{"level":4,"title":"2. 缩进","slug":"_2-缩进","link":"#_2-缩进","children":[]},{"level":4,"title":"3.使用空格","slug":"_3-使用空格","link":"#_3-使用空格","children":[]},{"level":4,"title":"4. 避免使用空格","slug":"_4-避免使用空格","link":"#_4-避免使用空格","children":[]},{"level":4,"title":"小结：","slug":"小结","link":"#小结","children":[]}]}]},{"level":2,"title":"2. 基本数据类型","slug":"_2-基本数据类型","link":"#_2-基本数据类型","children":[{"level":3,"title":"2.1 数字型","slug":"_2-1-数字型","link":"#_2-1-数字型","children":[{"level":4,"title":"2.1.1. 整数————不同进制的转换","slug":"_2-1-1-整数————不同进制的转换","link":"#_2-1-1-整数————不同进制的转换","children":[]},{"level":4,"title":"2.1.2. 浮点数","slug":"_2-1-2-浮点数","link":"#_2-1-2-浮点数","children":[]},{"level":4,"title":"2.1.3. *虚数","slug":"_2-1-3-虚数","link":"#_2-1-3-虚数","children":[]},{"level":4,"title":"2.1.4. 数字型的函数","slug":"_2-1-4-数字型的函数","link":"#_2-1-4-数字型的函数","children":[]}]},{"level":3,"title":"2.2  字符串","slug":"_2-2-字符串","link":"#_2-2-字符串","children":[{"level":4,"title":"2.2.1 字符串的成倍复制","slug":"_2-2-1-字符串的成倍复制","link":"#_2-2-1-字符串的成倍复制","children":[]},{"level":4,"title":"2.2.2 判断子集是否在字符串内 in","slug":"_2-2-2-判断子集是否在字符串内-in","link":"#_2-2-2-判断子集是否在字符串内-in","children":[]},{"level":4,"title":"2.2.3 字符编码","slug":"_2-2-3-字符编码","link":"#_2-2-3-字符编码","children":[]}]},{"level":3,"title":"2.3 布尔型","slug":"_2-3-布尔型","link":"#_2-3-布尔型","children":[{"level":4,"title":"2.3.1 判断是否全为真/假 any() 和 all()","slug":"_2-3-1-判断是否全为真-假-any-和-all","link":"#_2-3-1-判断是否全为真-假-any-和-all","children":[]}]}]},{"level":2,"title":"3. 组合数据类型","slug":"_3-组合数据类型","link":"#_3-组合数据类型","children":[{"level":3,"title":"3.1 列表","slug":"_3-1-列表","link":"#_3-1-列表","children":[{"level":4,"title":"range()","slug":"range","link":"#range","children":[]}]},{"level":3,"title":"3.2  元组","slug":"_3-2-元组","link":"#_3-2-元组","children":[{"level":4,"title":"3.3 字典","slug":"_3-3-字典","link":"#_3-3-字典","children":[]}]},{"level":3,"title":"3.4 集合","slug":"_3-4-集合","link":"#_3-4-集合","children":[{"level":4,"title":"3.4.1 数学运算","slug":"_3-4-1-数学运算","link":"#_3-4-1-数学运算","children":[]},{"level":4,"title":"3.4.2 操作","slug":"_3-4-2-操作","link":"#_3-4-2-操作","children":[]}]}]},{"level":2,"title":"4. 程序控制结构","slug":"_4-程序控制结构","link":"#_4-程序控制结构","children":[{"level":4,"title":"4.1 条件测试","slug":"_4-1-条件测试","link":"#_4-1-条件测试","children":[]},{"level":4,"title":"4.1.1 非空","slug":"_4-1-1-非空","link":"#_4-1-1-非空","children":[]},{"level":4,"title":"4.1.2 逻辑运算","slug":"_4-1-2-逻辑运算","link":"#_4-1-2-逻辑运算","children":[]},{"level":4,"title":"4.1.3 存在运算","slug":"_4-1-3-存在运算","link":"#_4-1-3-存在运算","children":[]},{"level":3,"title":"4.2 遍历循环","slug":"_4-2-遍历循环","link":"#_4-2-遍历循环","children":[{"level":4,"title":"4.2.1 变换迭代————字典","slug":"_4-2-1-变换迭代————字典","link":"#_4-2-1-变换迭代————字典","children":[]},{"level":4,"title":"4.2.2 range() 对象","slug":"_4-2-2-range-对象","link":"#_4-2-2-range-对象","children":[]},{"level":4,"title":"4.2.3 for 和 else 配合:","slug":"_4-2-3-for-和-else-配合","link":"#_4-2-3-for-和-else-配合","children":[]}]},{"level":3,"title":"4.2.4 while 和 else 融合：","slug":"_4-2-4-while-和-else-融合","link":"#_4-2-4-while-和-else-融合","children":[]},{"level":3,"title":"4.3 控制语句注意问题","slug":"_4-3-控制语句注意问题","link":"#_4-3-控制语句注意问题","children":[]}]},{"level":2,"title":"5. 函数","slug":"_5-函数","link":"#_5-函数","children":[{"level":3,"title":"5.1 关键字参数与位置参数","slug":"_5-1-关键字参数与位置参数","link":"#_5-1-关键字参数与位置参数","children":[]},{"level":3,"title":"5.2 默认参数","slug":"_5-2-默认参数","link":"#_5-2-默认参数","children":[]},{"level":3,"title":"5.3 可变参数","slug":"_5-3-可变参数","link":"#_5-3-可变参数","children":[]},{"level":3,"title":"5.4 全局变量","slug":"_5-4-全局变量","link":"#_5-4-全局变量","children":[{"level":4,"title":"5.4.1 通过 global 在函数体内定义全局变量","slug":"_5-4-1-通过-global-在函数体内定义全局变量","link":"#_5-4-1-通过-global-在函数体内定义全局变量","children":[]}]},{"level":3,"title":"5.5 返回值","slug":"_5-5-返回值","link":"#_5-5-返回值","children":[]},{"level":3,"title":"5.6 匿名函数","slug":"_5-6-匿名函数","link":"#_5-6-匿名函数","children":[]}]},{"level":2,"title":"6. 类","slug":"_6-类","link":"#_6-类","children":[{"level":3,"title":"6.1 类的定义","slug":"_6-1-类的定义","link":"#_6-1-类的定义","children":[{"level":4,"title":"6.1.1 类的命名","slug":"_6-1-1-类的命名","link":"#_6-1-1-类的命名","children":[]},{"level":4,"title":"6.1.2 类的属性","slug":"_6-1-2-类的属性","link":"#_6-1-2-类的属性","children":[]},{"level":4,"title":"6.1.3 类的方法","slug":"_6-1-3-类的方法","link":"#_6-1-3-类的方法","children":[]}]},{"level":3,"title":"6.2 创建实例","slug":"_6-2-创建实例","link":"#_6-2-创建实例","children":[{"level":4,"title":"6.2.1 实例的创建","slug":"_6-2-1-实例的创建","link":"#_6-2-1-实例的创建","children":[]},{"level":4,"title":"6.2.2 访问属性","slug":"_6-2-2-访问属性","link":"#_6-2-2-访问属性","children":[]},{"level":4,"title":"6.2.3 调用方法","slug":"_6-2-3-调用方法","link":"#_6-2-3-调用方法","children":[]},{"level":4,"title":"6.2.4 修改属性","slug":"_6-2-4-修改属性","link":"#_6-2-4-修改属性","children":[]}]},{"level":3,"title":"6.3 类的继承","slug":"_6-3-类的继承","link":"#_6-3-类的继承","children":[{"level":4,"title":"6.3.1 简单的继承","slug":"_6-3-1-简单的继承","link":"#_6-3-1-简单的继承","children":[]},{"level":4,"title":"6.3.2 给子类添加属性和方法","slug":"_6-3-2-给子类添加属性和方法","link":"#_6-3-2-给子类添加属性和方法","children":[]},{"level":4,"title":"6.3.3 重写父类的方法————多态","slug":"_6-3-3-重写父类的方法————多态","link":"#_6-3-3-重写父类的方法————多态","children":[]},{"level":4,"title":"6.3.4 用在类中的实例","slug":"_6-3-4-用在类中的实例","link":"#_6-3-4-用在类中的实例","children":[]}]}]},{"level":2,"title":"7. 文件、异常和模块","slug":"_7-文件、异常和模块","link":"#_7-文件、异常和模块","children":[{"level":3,"title":"7.1 文件的读写","slug":"_7-1-文件的读写","link":"#_7-1-文件的读写","children":[{"level":4,"title":"7.1.1 文件的代开通用格式","slug":"_7-1-1-文件的代开通用格式","link":"#_7-1-1-文件的代开通用格式","children":[]},{"level":4,"title":"7.1.2 文件的读取","slug":"_7-1-2-文件的读取","link":"#_7-1-2-文件的读取","children":[]},{"level":4,"title":"7.1.3 文件的写入","slug":"_7-1-3-文件的写入","link":"#_7-1-3-文件的写入","children":[]},{"level":4,"title":"7.1.4 既读又写","slug":"_7-1-4-既读又写","link":"#_7-1-4-既读又写","children":[]},{"level":4,"title":"7.1.5 数据的存储与读取","slug":"_7-1-5-数据的存储与读取","link":"#_7-1-5-数据的存储与读取","children":[]}]}]},{"level":2,"title":"7.2 异常处理","slug":"_7-2-异常处理","link":"#_7-2-异常处理","children":[{"level":4,"title":"7.2.1 常见异常的产生","slug":"_7-2-1-常见异常的产生","link":"#_7-2-1-常见异常的产生","children":[]},{"level":4,"title":"7.2.2 异常的处理","slug":"_7-2-2-异常的处理","link":"#_7-2-2-异常的处理","children":[]},{"level":3,"title":"7.3 模块简介","slug":"_7-3-模块简介","link":"#_7-3-模块简介","children":[{"level":4,"title":"7.3.1 广义模块分类","slug":"_7-3-1-广义模块分类","link":"#_7-3-1-广义模块分类","children":[]}]}]}],"git":{"createdTime":1713397939000,"updatedTime":1714146310000,"contributors":[{"name":"Lxj679","email":"2944170474@qq.com","commits":61}]},"readingTime":{"minutes":31.16,"words":9349},"filePathRelative":"Notability/python/0.basic-knowledge-extension.md","localizedDate":"2024年4月18日","excerpt":"\\n<p><strong>引言： 这篇文章旨在为 Ryan 本人服务</strong></p>\\n<h2>1. 基本语法元素</h2>\\n<h3>1.1 格式化输出</h3>\\n\\n<ol>\\n<li><strong>填充输出</strong></li>\\n</ol>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\"># 右对齐</span>\\na <span class=\\"token operator\\">=</span> <span class=\\"token number\\">123</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:_&gt;4}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># _123</span>\\nb <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1111</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:&amp;&gt;10}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># &amp;&amp;&amp;&amp;&amp;&amp;1111</span>\\n<span class=\\"token comment\\"># 左对齐</span>\\na <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'a'</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:*&lt;5}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># a****</span>\\n<span class=\\"token comment\\"># 居中</span>\\na <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'middle'</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:#^16}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># #####middle#####</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:#^15}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># ####middle#####</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'{0:#^17}'</span><span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">format</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\"># #####middle######</span>\\n</code></pre></div>","autoDesc":true}`);export{v as comp,m as data};
