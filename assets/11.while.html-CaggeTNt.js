import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-BON7tKRH.js";const e={},p=t(`<h2 id="_1-while-循环" tabindex="-1"><a class="header-anchor" href="#_1-while-循环"><span>1. while 循环</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">while</span> <span class="token keyword">not</span> user_answer_correct<span class="token punctuation">:</span>
    user_gender <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入您的性别（F/M）：&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> user_gender <span class="token operator">==</span> <span class="token string">&#39;F&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;您是女生&#39;</span><span class="token punctuation">)</span>
        user_answer_correct <span class="token operator">=</span> <span class="token boolean">True</span>
    <span class="token keyword">elif</span> user_gender <span class="token operator">==</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;你是男生&#39;</span><span class="token punctuation">)</span>
        user_answer_correct <span class="token operator">=</span> <span class="token boolean">True</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;wrong&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>while循环：在条件满足时，执行里面的程序</p><p>根据上面的代码回答下面的问题：</p><ul><li>为什么一开始需要一个单独的变量<code>user_answer_correct</code>来实现 while 循环的条件？直接while True 不行吗？</li></ul><p>while True 会一直执行程序</p><ul><li>上面程序循环的终止条件是什么？</li></ul><p>从代码语法层面看： while false</p><p>从逻辑层面看：在用户输入 F/M 时结束</p><ul><li><p>为什么变量一开始赋值为 False 为不是直接 True 呢？</p><p>逻辑问题，如果输入正确，而 user_answer_correct = False 会很奇怪</p><h2 id="_2-循环输出" tabindex="-1"><a class="header-anchor" href="#_2-循环输出"><span>2. 循环输出</span></a></h2></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>i <span class="token operator">=</span> <span class="token number">1</span>

<span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>

<span class="token comment"># output</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
<span class="token number">4</span>
<span class="token number">5</span>
<span class="token number">6</span>
<span class="token number">7</span>
<span class="token number">8</span>
<span class="token number">9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-练习" tabindex="-1"><a class="header-anchor" href="#_3-练习"><span>3. 练习</span></a></h2><ol><li><strong>求 1~100 的和</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>i <span class="token operator">=</span> <span class="token number">0</span>
total <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>
    total <span class="token operator">+=</span> i
    i <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span> <span class="token comment"># 5050</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>获取用户输入一个整数 n，计算 0~n 之和</strong></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;enter a number: &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
total <span class="token operator">=</span> <span class="token number">0</span>
i <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> i <span class="token operator">&lt;</span> n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span>
    total <span class="token operator">+=</span> i
    i <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><p><strong>猜数字游戏</strong></p><p>编写一个 Python 程序，使用 <code>while</code> 循环来实现一个简单的文本猜数字游戏。游戏的规则如下：</p><ol><li>程序首先生成一个1到100之间的随机整数，让用户来猜测这个数字是多少。</li><li>用户每次输入他们的猜测后，程序需要告诉用户猜测是太高了、太低了还是正确。</li><li>如果用户猜对了数字，程序应打印出用户尝试的次数，并结束循环。</li><li>用户有机会在放弃前最多猜测10次。如果10次都没猜对，程序应告诉用户正确的数字，并结束。</li></ol><p><strong>程序要求：</strong></p><ul><li>使用 <code>while</code> 循环来处理猜测过程。</li><li>确保程序能够处理非法输入，如非数字输入，应提示用户重新输入有效数字。</li><li>使用 Python 的 <code>random</code> 模块来生成随机数字。</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

num <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 生成1到100之间的随机整数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>代码实现：</strong></p></li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random
num <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># 生成 1 到 100 的随机整数</span>


guess_correct <span class="token operator">=</span> <span class="token boolean">False</span>
count <span class="token operator">=</span> <span class="token number">0</span>
guess_num <span class="token operator">=</span> <span class="token number">0</span>



<span class="token keyword">while</span> <span class="token keyword">not</span> guess_correct <span class="token keyword">and</span> count <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>
    guess_num <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入一个 1-100 的整数，你共有 10 次机会&gt;&gt;&gt;&gt; &#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> guess_num<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;请输入纯数字文本&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        guess_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>guess_num<span class="token punctuation">)</span>
        count <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">if</span> guess_num <span class="token operator">==</span> num<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;你猜对了，一共猜了</span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">次&#39;</span></span><span class="token punctuation">)</span>
            guess_correct <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">elif</span> guess_num <span class="token operator">&gt;</span> num<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;你猜的数字太大了，你已经猜了</span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">次&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;你猜的数字太小了，你已经猜了</span><span class="token interpolation"><span class="token punctuation">{</span>count<span class="token punctuation">}</span></span><span class="token string">次&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><p>ATM 机系统</p><p>编写一个Python程序，使用 <code>while</code> 循环实现一个基础的ATM机系统。程序应该具备以下功能：</p><ol><li><strong>初始设定：</strong> 程序开始时，要求用户设定初始的账户余额。</li><li><strong>交互菜单：</strong> 用户可以通过输入选择查看余额、存款、取款或退出。</li><li><strong>存款功能：</strong> 用户选择存款后，输入存款金额并更新余额。</li><li><strong>取款功能：</strong> 用户选择取款时，先检查账户余额是否足够，足够则扣除相应金额，不够则提示余额不足。</li><li><strong>查看余额：</strong> 允许用户随时查看当前余额。</li><li><strong>退出系统：</strong> 用户选择退出时，打印一条消息确认并结束程序。</li></ol><p><strong>程序要求：</strong></p><ul><li>使用 <code>while</code> 循环处理用户的多次交互直到用户选择退出。</li><li>确保所有输入均为有效数字，非数字输入时应提示错误并要求重新输入。</li><li>实现至少一种方式的用户身份验证，比如初始设定一个PIN码，每次操作前需验证。</li></ul><p><strong>代码实现：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_money <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请设定初始的账户余额：&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

user_pin_correct <span class="token operator">=</span> <span class="token boolean">False</span>


<span class="token keyword">while</span> <span class="token keyword">not</span> user_pin_correct<span class="token punctuation">:</span>
    user_pin <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入您的PIN码以继续：&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> user_pin <span class="token operator">!=</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;PIN码错误，请重试&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        user_pin_correct <span class="token operator">=</span> <span class="token boolean">True</span>


log_out <span class="token operator">=</span> <span class="token boolean">False</span>
<span class="token keyword">while</span> <span class="token keyword">not</span> log_out<span class="token punctuation">:</span>

    <span class="token keyword">if</span> user_pin <span class="token operator">!=</span> <span class="token string">&#39;1234&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;PIN码错误，请重试&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;欢迎使用ATM机系统\\n&#39;</span>
                <span class="token string">&#39;1.查看余额\\n&#39;</span>
                <span class="token string">&#39;2.存款\\n&#39;</span>
                <span class="token string">&#39;3.取款\\n&#39;</span>
                <span class="token string">&#39;4.退出\\n&#39;</span><span class="token punctuation">)</span>
        command <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入您的选择（1-4）：&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> command <span class="token operator">==</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;您剩余金额为</span><span class="token interpolation"><span class="token punctuation">{</span>user_money<span class="token punctuation">}</span></span><span class="token string">$\\n&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> command <span class="token operator">==</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">:</span>
            money <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入您想存入的金额：&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> money<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;请输入有效金额\\n&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                user_money <span class="token operator">+=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;存款成功！您现有的余额为：</span><span class="token interpolation"><span class="token punctuation">{</span>user_money<span class="token punctuation">}</span></span><span class="token string">$\\n&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> command <span class="token operator">==</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">:</span>
            money <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入您想取出的金额：&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> money<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;请输入有效金额\\n&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">elif</span> <span class="token builtin">float</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span> <span class="token operator">&gt;</span> user_money<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;账户余额不足\\n&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                user_money <span class="token operator">-=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;取款成功！您的余额为：</span><span class="token interpolation"><span class="token punctuation">{</span>user_money<span class="token punctuation">}</span></span><span class="token string">$\\n&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> command <span class="token operator">==</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">:</span>
            log_out <span class="token operator">=</span> <span class="token boolean">True</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;感谢使用我们的ATM服务，再见！\\n&#39;</span><span class="token punctuation">)</span>

        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;请重新输入有效数字（1-4）\\n&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="设置一个初始的pin码和账户余额。用户在程序启动时被要求输入。" tabindex="-1"><a class="header-anchor" href="#设置一个初始的pin码和账户余额。用户在程序启动时被要求输入。"><span>设置一个初始的PIN码和账户余额。用户在程序启动时被要求输入。</span></a></h1><p>pin = &quot;1234&quot; balance = float(input(&quot;请设定您的初始账户余额: &quot;))</p><h1 id="验证用户输入的pin码。用户有三次机会输入正确的pin码。" tabindex="-1"><a class="header-anchor" href="#验证用户输入的pin码。用户有三次机会输入正确的pin码。"><span>验证用户输入的PIN码。用户有三次机会输入正确的PIN码。</span></a></h1><p>attempts = 0 while attempts &lt; 3: entered_pin = input(&quot;请输入您的PIN码以继续：&quot;) if entered_pin == pin: break # 如果PIN码正确，退出循环。 print(&quot;PIN码错误，请重试。&quot;) attempts += 1 # 增加尝试次数。 if attempts == 3: print(&quot;PIN码错误次数过多，程序退出。&quot;) else: # 如果PIN码验证通过，进入主功能菜单的循环。 while True: print(&quot;\\n欢迎使用ATM机系统&quot;) print(&quot;1. 查看余额&quot;) print(&quot;2. 存款&quot;) print(&quot;3. 取款&quot;) print(&quot;4. 退出&quot;) choice = input(&quot;请输入您的选择（1-4）：&quot;)</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>    <span class="token keyword">if</span> choice <span class="token operator">==</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">:</span>
        <span class="token comment"># 查看余额的选项。</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;您的账户余额为：$</span><span class="token interpolation"><span class="token punctuation">{</span>balance<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">:</span>
        <span class="token comment"># 存款的选项。用户输入存款金额。</span>
        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                amount <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入存款金额：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> amount <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
                    balance <span class="token operator">+=</span> amount
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;存款成功！您的新余额为：$</span><span class="token interpolation"><span class="token punctuation">{</span>balance<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span>  <span class="token comment"># 成功存款后退出内部循环。</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个正数。&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 引导用户输入正数金额。</span>
            <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;无效输入，请输入一个数字。&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 引导用户输入有效数字。</span>
    <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">:</span>
        <span class="token comment"># 取款的选项。检查账户余额并进行取款操作。</span>
        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                amount <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入取款金额：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> amount <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>
                    <span class="token keyword">if</span> amount <span class="token operator">&gt;</span> balance<span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;余额不足，无法完成取款。&quot;</span><span class="token punctuation">)</span>
                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        balance <span class="token operator">-=</span> amount
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;取款成功！您的新余额为：$</span><span class="token interpolation"><span class="token punctuation">{</span>balance<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span>  <span class="token comment"># 完成取款或显示余额不足信息后退出循环。</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个正数。&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;无效输入，请输入一个数字。&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">:</span>
        <span class="token comment"># 退出选项。结束程序。</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;感谢使用我们的ATM服务，再见！&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>  <span class="token comment"># 退出主循环，结束程序。</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token comment"># 如果输入非1-4的选项，提示无效输入。</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;无效输入，请输入1-4之间的数字。&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,19),o=[p];function i(l,c){return s(),a("div",null,o)}const k=n(e,[["render",i],["__file","11.while.html.vue"]]),d=JSON.parse(`{"path":"/Notability/python/11.while.html","title":"11. while","lang":"zh-CN","frontmatter":{"title":"11. while","date":"2024-05-08T12:27:01.000Z","isOriginal":true,"category":["python"],"tag":["python","编程","教程"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. while 循环 while循环：在条件满足时，执行里面的程序 根据上面的代码回答下面的问题： 为什么一开始需要一个单独的变量user_answer_correct来实现 while 循环的条件？直接while True 不行吗？ while True 会一直执行程序 上面程序循环的终止条件是什么？ 从代码语法层面看： while false 从...","head":[["meta",{"property":"og:url","content":"https://dailyrecord4ryan.com/Notability/python/11.while.html"}],["meta",{"property":"og:site_name","content":"Website of Ryan"}],["meta",{"property":"og:title","content":"11. while"}],["meta",{"property":"og:description","content":"1. while 循环 while循环：在条件满足时，执行里面的程序 根据上面的代码回答下面的问题： 为什么一开始需要一个单独的变量user_answer_correct来实现 while 循环的条件？直接while True 不行吗？ while True 会一直执行程序 上面程序循环的终止条件是什么？ 从代码语法层面看： while false 从..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-09T07:44:56.000Z"}],["meta",{"property":"article:author","content":"Ryan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-05-08T12:27:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-09T07:44:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"11. while\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-08T12:27:01.000Z\\",\\"dateModified\\":\\"2024-05-09T07:44:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan\\",\\"url\\":\\"https://dailyrecord4ryan.com\\"}]}"]]},"headers":[{"level":2,"title":"1. while 循环","slug":"_1-while-循环","link":"#_1-while-循环","children":[]},{"level":2,"title":"3. 练习","slug":"_3-练习","link":"#_3-练习","children":[]}],"git":{"createdTime":1715143740000,"updatedTime":1715240696000,"contributors":[{"name":"Lxj679","email":"2944170474@qq.com","commits":4}]},"readingTime":{"minutes":5.76,"words":1727},"filePathRelative":"Notability/python/11.while.md","localizedDate":"2024年5月8日","excerpt":"<h2>1. while 循环</h2>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">while</span> <span class=\\"token keyword\\">not</span> user_answer_correct<span class=\\"token punctuation\\">:</span>\\n    user_gender <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">input</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'请输入您的性别（F/M）：'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> user_gender <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'F'</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'您是女生'</span><span class=\\"token punctuation\\">)</span>\\n        user_answer_correct <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">True</span>\\n    <span class=\\"token keyword\\">elif</span> user_gender <span class=\\"token operator\\">==</span> <span class=\\"token string\\">'M'</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'你是男生'</span><span class=\\"token punctuation\\">)</span>\\n        user_answer_correct <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">True</span>\\n    <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'wrong'</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>","autoDesc":true}`);export{k as comp,d as data};
