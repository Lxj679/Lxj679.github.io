import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-KDApLzNO.js";const p="/assets/0fef5d75d64cf6cc225b35701b9987e-1711462387989-3-CKGTBy5a.png",e={},o=t(`<h2 id="_1-数字型-int-float" tabindex="-1"><a class="header-anchor" href="#_1-数字型-int-float"><span>1. 数字型（int，float）</span></a></h2><h3 id="_1-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_1-1-代码示例"><span>1.1 代码示例</span></a></h3><ol><li>整型</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>int_num <span class="token operator">=</span> <span class="token number">1</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>int_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;int num type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数据类型，并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>int_num<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token builtin">int</span> num <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span>
直接检测数据类型，并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>浮点数</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>float_num <span class="token operator">=</span> <span class="token number">1.5</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>float_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>float_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;float num type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数据类型，并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>float_num<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token number">1.5</span>
<span class="token builtin">float</span> num <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;float&#39;</span><span class="token operator">&gt;</span>
直接检测数据类型，并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;float&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-字符串-str" tabindex="-1"><a class="header-anchor" href="#_2-字符串-str"><span>2. 字符串（str）</span></a></h2><h3 id="_2-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_2-1-代码示例"><span>2.1 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>string <span class="token operator">=</span> <span class="token string">&#39;Hello Dailyrecord4ryan&#39;</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;string type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数据类型，并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
Hello Dailyrecord4ryan
string <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
直接检测数据类型，并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-字符串的三大特性" tabindex="-1"><a class="header-anchor" href="#_2-2-字符串的三大特性"><span>2.2 字符串的三大特性</span></a></h3><ol><li>有序性 <ol><li>从左到右，下标是从0开始；</li><li>从右到左，下标是从-1开始；</li><li>引号里面出现，都算一个下标；</li></ol></li><li>不可变性 <ol><li>字符串被创建出来之后，就不能被改变；</li><li>注意：我们说的不可变，是代码运行的过程当中，不能有对字符串修改、添加、删除之类的操作；</li></ol></li><li>任意字符： <ol><li>键盘上可以输入的字符，都可以是字符串的元素；</li><li>字符放到字符串中，都将成为字符串。（也就是：里面的每一个元素都可以称为：子字符）；</li></ol></li></ol><h2 id="_3-列表" tabindex="-1"><a class="header-anchor" href="#_3-列表"><span>3. 列表</span></a></h2><h3 id="_3-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_3-1-代码示例"><span>3.1 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;hello dailyrecord4ryan&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;look&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;book&#39;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&#39;汉堡包&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;list type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数据类型，并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output </span>
<span class="token punctuation">[</span><span class="token string">&#39;hello dailyrecord4ryan&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;look&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;book&#39;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&#39;汉堡包&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span>
<span class="token builtin">list</span> <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;list&#39;</span><span class="token operator">&gt;</span>
直接检测数据类型，并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;list&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-列表的三大特性" tabindex="-1"><a class="header-anchor" href="#_3-2-列表的三大特性"><span>3.2 列表的三大特性</span></a></h3><ol><li>有序性 <ol><li>从左到有，下标是从0开始；</li><li>从右到左，下表是从-1开始；</li><li>列表的每个元素算一个： <ol><li>比如：list = <code>[&#39;dailyrecord4ryan&#39;, 12]</code>;</li><li>上面 list 有两个元素，下标分别是： <ol><li><code>dailyrecord4ryan</code>是下标0（从左到右），也是下标-2（从右到左）；</li><li><code>12</code>是下标1（从左到右），也是下标-1（从右到左）；</li></ol></li></ol></li></ol></li><li>可变性：在程序运行的过程当中，列表可以改变（添加、删除、修改）</li><li>任意数据类型：注意，这里所说的任意数据类型，指的是Python所拥有的数据类型；</li></ol><details class="hint-container details"><summary>Python所拥有的数据类型（下面只包含基础类型）</summary><figure><img src="`+p+`" alt="Data Type" tabindex="0" loading="lazy"><figcaption>Data Type</figcaption></figure></details><h2 id="_4-元组-tuple" tabindex="-1"><a class="header-anchor" href="#_4-元组-tuple"><span>4. 元组(Tuple)</span></a></h2><h3 id="_4-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_4-1-代码示例"><span>4.1 代码示例</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;aiyc&#39;</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;tup type is:&gt;&gt;&gt;&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;直接检测数据类型，并输出:&gt;&gt;&gt;&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;aiyc&#39;</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
tup <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;tuple&#39;</span><span class="token operator">&gt;</span>
直接检测数据类型，并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;tuple&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-元组的三大特性" tabindex="-1"><a class="header-anchor" href="#_4-2-元组的三大特性"><span>4.2 元组的三大特性</span></a></h3><ol><li><p>有序性</p><ol><li><p>从左到右，下标是从0开始</p></li><li><p>从右到左，下表是从-1开始</p><ol><li><p>比如<code>tup=(&#39;dailyrecord4ryan&#39;, 12)</code></p></li><li><p>上面 tup 有两个元素，下标分别是：</p><ol><li><p><code>dailyrecord4ryan</code>是下标0（从左到右），也是下标-2（从右到左）；</p></li><li><p><code>12</code>是下标1（从左到右），也是下标-1（从右到左）；</p></li></ol></li></ol></li></ol></li><li><p>不可变性</p><ol><li><p>元组被创建出来之后，就不能改变；</p></li><li><p>注意：我们说的不可变，是在代码运行当中，不能有对元组修改、添加、删除之类的操作；</p></li></ol></li><li><p>任意数据类型：注意，这里所说的任意数据类型，指的是Python所拥有的数据类型；</p></li></ol><h2 id="_5-探究-元组-列表" tabindex="-1"><a class="header-anchor" href="#_5-探究-元组-列表"><span>5. 探究（元组&amp;列表）</span></a></h2><div class="hint-container info"><p class="hint-container-title">为什么有列表，还需要元组</p><p>列表和元组到底用哪一个呢？</p></div>`,24),l=[o];function i(c,u){return s(),a("div",null,l)}const d=n(e,[["render",i],["__file","2.Data-type.html.vue"]]),g=JSON.parse(`{"path":"/Notability/python/2.Data-type.html","title":"初识数据类型","lang":"zh-CN","frontmatter":{"title":"初识数据类型","date":"2024-03-26T21:29:15.000Z","isOriginal":true,"category":["python"],"tag":["python","编程","教程"],"icon":"python","sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"comment":true,"lastUpdated":true,"editLink":true,"backToTop":true,"toc":true,"description":"1. 数字型（int，float） 1.1 代码示例 整型 浮点数 2. 字符串（str） 2.1 代码示例 2.2 字符串的三大特性 有序性 从左到右，下标是从0开始； 从右到左，下标是从-1开始； 引号里面出现，都算一个下标； 不可变性 字符串被创建出来之后，就不能被改变； 注意：我们说的不可变，是代码运行的过程当中，不能有对字符串修改、添加、删除...","head":[["meta",{"property":"og:url","content":"https://dailyrecord4ryan.com/Notability/python/2.Data-type.html"}],["meta",{"property":"og:site_name","content":"Website of Ryan"}],["meta",{"property":"og:title","content":"初识数据类型"}],["meta",{"property":"og:description","content":"1. 数字型（int，float） 1.1 代码示例 整型 浮点数 2. 字符串（str） 2.1 代码示例 2.2 字符串的三大特性 有序性 从左到右，下标是从0开始； 从右到左，下标是从-1开始； 引号里面出现，都算一个下标； 不可变性 字符串被创建出来之后，就不能被改变； 注意：我们说的不可变，是代码运行的过程当中，不能有对字符串修改、添加、删除..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T14:37:49.000Z"}],["meta",{"property":"article:author","content":"Ryan"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"编程"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-03-26T21:29:15.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-26T14:37:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初识数据类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-26T21:29:15.000Z\\",\\"dateModified\\":\\"2024-03-26T14:37:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan\\",\\"url\\":\\"https://dailyrecord4ryan.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 数字型（int，float）","slug":"_1-数字型-int-float","link":"#_1-数字型-int-float","children":[{"level":3,"title":"1.1 代码示例","slug":"_1-1-代码示例","link":"#_1-1-代码示例","children":[]}]},{"level":2,"title":"2. 字符串（str）","slug":"_2-字符串-str","link":"#_2-字符串-str","children":[{"level":3,"title":"2.1 代码示例","slug":"_2-1-代码示例","link":"#_2-1-代码示例","children":[]},{"level":3,"title":"2.2 字符串的三大特性","slug":"_2-2-字符串的三大特性","link":"#_2-2-字符串的三大特性","children":[]}]},{"level":2,"title":"3. 列表","slug":"_3-列表","link":"#_3-列表","children":[{"level":3,"title":"3.1 代码示例","slug":"_3-1-代码示例","link":"#_3-1-代码示例","children":[]},{"level":3,"title":"3.2 列表的三大特性","slug":"_3-2-列表的三大特性","link":"#_3-2-列表的三大特性","children":[]}]},{"level":2,"title":"4. 元组(Tuple)","slug":"_4-元组-tuple","link":"#_4-元组-tuple","children":[{"level":3,"title":"4.1 代码示例","slug":"_4-1-代码示例","link":"#_4-1-代码示例","children":[]},{"level":3,"title":"4.2 元组的三大特性","slug":"_4-2-元组的三大特性","link":"#_4-2-元组的三大特性","children":[]}]},{"level":2,"title":"5. 探究（元组&列表）","slug":"_5-探究-元组-列表","link":"#_5-探究-元组-列表","children":[]}],"git":{"createdTime":1711463402000,"updatedTime":1711463869000,"contributors":[{"name":"Lxj679","email":"2944170474@qq.com","commits":3}]},"readingTime":{"minutes":3.16,"words":948},"filePathRelative":"Notability/python/2.Data-type.md","localizedDate":"2024年3月26日","excerpt":"<h2>1. 数字型（int，float）</h2>\\n<h3>1.1 代码示例</h3>\\n<ol>\\n<li>整型</li>\\n</ol>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code>int_num <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span>\\nt <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">type</span><span class=\\"token punctuation\\">(</span>int_num<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"int num type is:&gt;&gt;&gt;\\"</span><span class=\\"token punctuation\\">,</span> t<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"直接检测数据类型，并输出:&gt;&gt;&gt;\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">type</span><span class=\\"token punctuation\\">(</span>int_num<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># output</span>\\n<span class=\\"token builtin\\">int</span> num <span class=\\"token builtin\\">type</span> <span class=\\"token keyword\\">is</span><span class=\\"token punctuation\\">:</span><span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">class</span> <span class=\\"token string\\">'int'</span><span class=\\"token operator\\">&gt;</span>\\n直接检测数据类型，并输出<span class=\\"token punctuation\\">:</span><span class=\\"token operator\\">&gt;&gt;</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">&lt;</span><span class=\\"token keyword\\">class</span> <span class=\\"token string\\">'int'</span><span class=\\"token operator\\">&gt;</span>\\n</code></pre></div>","autoDesc":true}`);export{d as comp,g as data};
